<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--大区服务mapper-->
<mapper namespace="utry.data.modular.region.dao.RegionDao">
    <!-- 开启二级缓存 -->
    <!--<cache eviction="LRU" flushInterval="300000" readOnly="true" size="1024"></cache>-->
    <!--派工单详情表新增-->
    <insert id="serviceDetailAdd">
        insert into t_region_dispatching_detail (
            dispatchingOrder,systemState,dispatchingSource,dispatchingTime,startTimeOfAssessment,
            serviceType,storeNumber,storeName,accountingCenter,accountingCenterCode,
            provinces,provincesCode,city,cityCode,county,countyCode,productCategoryCode,
            productCategory,productTypeCode,productType,firstServiceType
        ) values (
             #{dispatchingOrder},#{systemState},#{dispatchingSource},#{dispatchingTime},#{startTimeOfAssessment},
             #{serviceType},#{storeNumber},#{storeName},#{accountingCenter},#{accountingCenterCode},
             #{provinces},#{provincesCode},#{city},#{cityCode},#{county},#{countyCode},#{productCategoryCode},
             #{productCategory},#{productTypeCode},#{productType},#{firstServiceType}
        )
    </insert>
    <!--挂单信息表新增记录-->
    <insert id="pendingOrderAdd">
        insert into t_region_pending_order(
            pendingId,dispatchingOrder,pendingOrderTime,pendingOrderCause
        )values(
            CONCAT(#{dispatchingOrder},REPLACE(unix_timestamp(current_timestamp(6)),'.','')),#{dispatchingOrder},#{serviceTime},#{pendingOrderCause}
        )
    </insert>
    <!--派工单流转记录新增-->
    <insert id="transferSave">
        insert into t_region_transfer_information (
            transferId,associatedNumber,operationTime,operationContent,relatedData,remark
        )values(
            REPLACE(UUID(), _utf8'-', _utf8''),#{associatedNumber},#{operationTime},#{operationContent},#{relatedData},#{remark}
        )
    </insert>
    <!--二次上门认定信息表新增记录-->
    <insert id="secondDoorAdd">
        insert into t_region_second_door (
            dispatchingOrder,creationTime,systemState,finalDecision,jobOrder,relevantJobOrder
        )values(
            #{dispatchingOrder},#{serviceTime},#{systemState},#{finalDecision},#{jobOrder},#{relevantJobOrder}
        )
    </insert>
    <insert id="storeAdds">
        INSERT INTO t_region_service_store (
            storeNumber,storeName,storeShortName,openingTime,closingTime,provinces,
            provincesCode,city,cityCode,county,countyCode,town,detailedAddress,
            longitude,latitude,accountingArea,accountingAreaCode,accountingCenter,accountingCenterCode,
            storeState
        ) VALUES 
            <foreach collection="list" item="item" index="index" separator=",">
                (#{item.storeNumber},#{item.storeName},#{item.storeShortName},#{item.openingTime},#{item.closingTime},#{item.provinces},
                #{item.provincesCode},#{item.city},#{item.cityCode},#{item.county},#{item.countyCode},#{item.town},#{item.detailedAddress},
                #{item.longitude},#{item.latitude},#{item.accountingArea},#{item.accountingAreaCode},#{item.accountingCenter},#{item.accountingCenterCode},
                #{item.storeState})
            </foreach>
        

    </insert>
    <!--批量插入单个派工单的调换部件信息-->
    <insert id="replaceAdds">
        INSERT INTO t_region_replace_part (
        replaceId,dispatchingOrder,partCode,partName,partDrawingNo,describedDrawingNo,
        faultCauseCode,faultCause,faultSymptomCode,faultSymptom,partBarcode
        ) VALUES
        <foreach collection="replacePart" item="item" index="index" separator=",">
            (REPLACE(UUID(), _utf8'-', _utf8''),#{dispatchingOrder},#{item.partCode},#{item.partName},#{item.partDrawingNo},#{item.describedDrawingNo},
            #{item.faultCauseCode},#{item.faultCause},#{item.faultSymptomCode},#{item.faultSymptom},#{item.partBarcode})
        </foreach>
    </insert>
    <!--批量插入单个派工单的检修部件信息-->
    <insert id="repairAdds">
        INSERT INTO t_region_repair_part (
        repairId,dispatchingOrder,partCode,partName,partDrawingNo,describedDrawingNo,
        faultCauseCode,faultCause,faultSymptomCode,faultSymptom,maintenanceLevel,
        maintenanceSign,qualityFeedbackSign,allowPartsRepairSign,maintenanceType
        ) VALUES
        <foreach collection="repairPart" item="item" index="index" separator=",">
            (REPLACE(UUID(), _utf8'-', _utf8''),#{dispatchingOrder},#{item.partCode},#{item.partName},#{item.partDrawingNo},#{item.describedDrawingNo},
            #{item.faultCauseCode},#{item.faultCause},#{item.faultSymptomCode},#{item.faultSymptom},#{item.maintenanceLevel},
             #{item.maintenanceSign},#{item.qualityFeedbackSign},#{item.allowPartsRepairSign},#{item.maintenanceType})
        </foreach>
    </insert>
    <insert id="errorSave">
        INSERT INTO t_region_error ( dispatchingOrder ) SELECT
            #{dispatchingOrder}
            WHERE
	NOT EXISTS ( SELECT * FROM t_region_error WHERE dispatchingOrder = #{dispatchingOrder} );
    </insert>
    <!--派工单详情表修改。有则改无则不改空字符串则清空-->
    <update id="serviceDetailEdit">
        update t_region_dispatching_detail
        <set>
            <if test="systemState != null">
                systemState = #{systemState},
            </if>
            <if test="dispatchingSource != null">
                dispatchingSource = #{dispatchingSource},
            </if>
            <if test="dispatchingTime != null">
                dispatchingTime = #{dispatchingTime},
            </if>
            <if test="dispatchingOperationTime != null">
                dispatchingOperationTime = #{dispatchingOperationTime},
            </if>
            <if test="serviceNumber != null">
                serviceNumber = #{serviceNumber},
            </if>
            <if test="startTimeOfAssessment != null">
                startTimeOfAssessment = #{startTimeOfAssessment},
            </if>
            <if test="receiptTime != null">
                receiptTime = #{receiptTime},
            </if>
            <if test="serviceType != null">
                serviceType = #{serviceType},
            </if>
            <if test="storeNumber != null">
                storeNumber = #{storeNumber},
            </if>
            <if test="storeName != null">
                storeName = #{storeName},
            </if>
            <if test="accountingCenter != null">
                accountingCenter = #{accountingCenter},
            </if>
            <if test="accountingCenterCode != null">
                accountingCenterCode = #{accountingCenterCode},
            </if>
            <if test="provinces != null">
                provinces = #{provinces},
            </if>
            <if test="provincesCode != null">
                provincesCode = #{provincesCode},
            </if>
            <if test="city != null">
                city = #{city},
            </if>
            <if test="cityCode != null">
                cityCode = #{cityCode},
            </if>
            <if test="county != null">
                county = #{county},
            </if>
            <if test="countyCode != null">
                countyCode = #{countyCode},
            </if>
            <if test="expectedArrivalTime != null">
                expectedArrivalTime = #{expectedArrivalTime},
            </if>
            <if test="firstAppointmentTime != null">
                firstAppointmentTime = #{firstAppointmentTime},
            </if>
            <if test="firstAppointmentTimeSection != null">
                firstAppointmentTimeSection = #{firstAppointmentTimeSection},
            </if>
            <if test="appointmentTime != null">
                appointmentTime = #{appointmentTime},
            </if>
            <if test="appointmentTimeSection != null">
                appointmentTimeSection = #{appointmentTimeSection},
            </if>
            <if test="appointmentOperationTime != null">
                appointmentOperationTime = #{appointmentOperationTime},
            </if>
            <if test="firstVisitTime != null">
                firstVisitTime = #{firstVisitTime},
            </if>
            <if test="visitTime != null">
                visitTime = #{visitTime},
            </if>
            <if test="finishTime != null">
                finishTime = #{finishTime},
            </if>
            <if test="rescheduleFrequency != null">
                rescheduleFrequency = #{rescheduleFrequency},
            </if>
            <if test="productCategoryCode != null">
                productCategoryCode = #{productCategoryCode},
            </if>
            <if test="productCategory != null">
                productCategory = #{productCategory},
            </if>
            <if test="productTypeCode != null">
                productTypeCode = #{productTypeCode},
            </if>
            <if test="productType != null">
                productType = #{productType},
            </if>
            <if test="productSeries != null">
                productSeries = #{productSeries},
            </if>
            <if test="productModel != null">
                productModel = #{productModel},
            </if>
            <if test="machineNumber != null">
                machineNumber = #{machineNumber},
            </if>
            <if test="purchaseDate != null">
                purchaseDate = #{purchaseDate},
            </if>
            <if test="customerId != null">
                customerId = #{customerId},
            </if>
            <if test="customerNotes != null">
                customerNotes = #{customerNotes},
            </if>
            <if test="productSpecialVersion != null">
                productSpecialVersion = #{productSpecialVersion},
            </if>
            <if test="notes != null">
                notes = #{notes},
            </if>
            <if test="engineerId != null">
                engineerId = #{engineerId},
            </if>
            <if test="engineerName != null">
                engineerName = #{engineerName},
            </if>
            <if test="serviceWay != null">
                serviceWay  = #{serviceWay},
            </if>
            <if test="maintainWay != null">
                maintainWay = #{maintainWay},
            </if>
            <if test="sendRepairTime != null">
                sendRepairTime = #{sendRepairTime},
            </if>
            <if test="shopDeliveryTime != null">
                shopDeliveryTime = #{shopDeliveryTime},
            </if>
            <if test="exchangeMaintain != null">
                exchangeMaintain = #{exchangeMaintain},
            </if>
            <if test="shopReturnTime != null">
                shopReturnTime = #{shopReturnTime},
            </if>
            <if test="customerDeliveryTime != null">
                customerDeliveryTime = #{customerDeliveryTime},
            </if>
            <if test="cancellationTime != null">
                cancellationTime = #{cancellationTime},
            </if>
            <if test="modificationDispatchTime != null">
                modificationDispatchTime = #{modificationDispatchTime},
            </if>
            <if test="modificationAppointmentTime != null">
                modificationAppointmentTime = #{modificationAppointmentTime},
            </if>
            <if test="submissionTime != null">
                submissionTime = #{submissionTime},
            </if>
            <if test="returnCollectionTime != null">
                returnCollectionTime = #{returnCollectionTime},
            </if>
            <if test="calculationState != null">
                calculationState = #{calculationState},
            </if>
            <if test="calculationTime != null">
                calculationTime = #{calculationTime},
            </if>
            <if test="settledTime != null">
                settledTime = #{settledTime},
            </if>
            <if test="noSettledTime != null">
                noSettledTime = #{noSettledTime},
            </if>
            <if test="notSettledTime != null">
                notSettledTime = #{notSettledTime},
            </if>
            <if test="pendingTime != null">
                pendingTime = #{pendingTime},
            </if>
            <if test="towUp != null">
                towUp = #{towUp},
            </if>
            <if test="average != null">
                average = #{average},
            </if>
            <if test="maintainLevel != null">
                maintainLevel = #{maintainLevel},
            </if>
            <if test="firstServiceType != null">
                firstServiceType = #{firstServiceType},
            </if>
            <if test="pendingState != null">
                pendingState = #{pendingState},
            </if>
            <if test="firstPunctualityEligible != null and firstPunctualityEligible != '-'.toString()">
                firstPunctualityEligible = #{firstPunctualityEligible},
            </if>
            <if test="firstPunctualityEligible != null and firstPunctualityEligible == '-'.toString()">
                firstPunctualityEligible = NULL,
            </if>
            <if test="repairEligible != null and repairEligible != '-'.toString()">
                repairEligible = #{repairEligible},
            </if>
            <if test="returnWay != null and returnWay != ''">
                returnWay = #{returnWay},
            </if>
            <if test="fwlxbg != null and fwlxbg != ''">
                finishTime = NULL,shopReturnTime = NULL,customerDeliveryTime = NULL,average = NULL,averageEligible = NULL,TATFinishTime = NULL,
            </if>
            <if test="accountingArea != null and accountingArea != '-'.toString()">
                accountingArea = #{accountingArea},
            </if>
            <if test="accountingAreaCode != null and accountingAreaCode != '-'.toString()">
                accountingAreaCode = #{accountingAreaCode},
            </if>
            <if test="accountingArea != null and accountingArea == '-'.toString()">
                accountingArea = NULL,
            </if>
            <if test="accountingAreaCode != null and accountingAreaCode == '-'.toString()">
                accountingAreaCode = NULL,
            </if>
            <if test="firstPunctualityEligible == null and serviceTime != null and serviceTime != ''">
                updateTime = #{serviceTime},
            </if>
        </set>
        where dispatchingOrder = #{dispatchingOrder}
    </update>
    <!--挂单信息表修改-->
    <update id="pendingOrderEdit">
        update t_region_pending_order
        set finishOrderTime = #{serviceTime}
        where pendingId = #{pendingId}
    </update>
    <!--二次上门认定信息表修改-->
    <update id="secondDoorEdit">
        update t_region_second_door
        <set>
            <if test="systemState != null">
                systemState = #{systemState},
            </if>
            <if test="finalDecision != null">
                finalDecision = #{finalDecision},
            </if>
            <if test="jobOrder != null">
                jobOrder = #{jobOrder},
            </if>
            <if test="relevantJobOrder != null">
                relevantJobOrder = #{relevantJobOrder},
            </if>
        </set>
        where   dispatchingOrder=#{dispatchingOrder}
    </update>
    <update id="storeUpdates">
        <foreach collection="list" item="item" index="index" separator=";">
            UPDATE t_region_service_store
            set storeName = #{item.storeName},storeShortName = #{item.storeShortName},openingTime = #{item.openingTime},
                closingTime = #{item.closingTime},provinces = #{item.provinces},provincesCode = #{item.provincesCode},
                city = #{item.city},cityCode = #{item.cityCode},county = #{item.county},countyCode = #{item.countyCode},
                town = #{item.town},detailedAddress = #{item.detailedAddress},longitude = #{item.longitude},
                latitude = #{item.latitude},accountingArea = #{item.accountingArea},accountingAreaCode = #{item.accountingAreaCode},
                accountingCenter = #{item.accountingCenter},accountingCenterCode = #{item.accountingCenterCode},storeState = #{item.storeState}
            WHERE storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
        </foreach>
    </update>
    <!--<update id="storeUpdates" parameterType="java.util.List">
        update t_region_service_store
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="storeName =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.storeName !=null and item.storeName != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.storeName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="storeShortName =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.storeShortName !=null and item.storeShortName != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.storeShortName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="openingTime =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.openingTime !=null and item.openingTime != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.openingTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="closingTime =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.closingTime !=null and item.closingTime != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.closingTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="provinces =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.provinces !=null and item.provinces != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.provinces}
                    </if>
                </foreach>
            </trim>
            <trim prefix="provincesCode =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.provincesCode !=null and item.provincesCode != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.provincesCode}
                    </if>
                </foreach>
            </trim>
            <trim prefix="city =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.city !=null and item.city != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.city}
                    </if>
                </foreach>
            </trim>
            <trim prefix="cityCode =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.cityCode !=null and item.cityCode != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.cityCode}
                    </if>
                </foreach>
            </trim>
            <trim prefix="county =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.county !=null and item.county != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.county}
                    </if>
                </foreach>
            </trim>
            <trim prefix="countyCode =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.countyCode !=null and item.countyCode != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.countyCode}
                    </if>
                </foreach>
            </trim>
            <trim prefix="town =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.town !=null and item.town != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.town}
                    </if>
                </foreach>
            </trim>
            <trim prefix="detailedAddress =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.detailedAddress !=null and item.detailedAddress != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.detailedAddress}
                    </if>
                </foreach>
            </trim>
            <trim prefix="longitude =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.longitude !=null and item.longitude != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.longitude}
                    </if>
                </foreach>
            </trim>
            <trim prefix="latitude =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.latitude !=null and item.latitude != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.latitude}
                    </if>
                </foreach>
            </trim>
            <trim prefix="accountingArea =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.accountingArea !=null and item.accountingArea != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.accountingArea}
                    </if>
                </foreach>
            </trim>
            <trim prefix="accountingAreaCode =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.accountingAreaCode !=null and item.accountingAreaCode != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.accountingAreaCode}
                    </if>
                </foreach>
            </trim>
            <trim prefix="accountingCenter =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.accountingCenter !=null and item.accountingCenter != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.accountingCenter}
                    </if>
                </foreach>
            </trim>
            <trim prefix="accountingCenterCode =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.accountingCenterCode !=null and item.accountingCenterCode != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.accountingCenterCode}
                    </if>
                </foreach>
            </trim>
            <trim prefix="storeState =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.storeState !=null and item.storeState != ''">
                        when storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
                        then #{item.storeState}
                    </if>
                </foreach>
            </trim>
        </trim>
        where CONCAT(storeNumber,accountingCenterCode) in
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.storeNumber+item.accountingCenterCode}
        </foreach>
    </update>-->
    <update id="storeDels">
        <foreach collection="list" item="item" index="index" separator=";">
            UPDATE t_region_service_store
            set storeState = '已停用'
            WHERE storeNumber = #{item.storeNumber} and accountingCenterCode = #{item.accountingCenterCode}
        </foreach>
    </update>
    <delete id="dispatchingDel">
        delete from t_region_dispatching_detail where dispatchingOrder = #{dispatchingOrder};
        delete from t_region_pending_order where dispatchingOrder = #{dispatchingOrder};
    </delete>
    <delete id="errorDel">
        delete from t_region_error where dispatchingOrder = #{dispatchingOrder}
    </delete>
    <!--通过派工单号查询该派工单的挂单信息列表-->
    <select id="pendingOrderList" resultType="java.util.Map">
        select pendingId,dispatchingOrder,pendingOrderTime,finishOrderTime,pendingOrderCause
        from t_region_pending_order
        where dispatchingOrder = #{dispatchingOrder}
        order by pendingId desc
    </select>
    <!--通过派工单号查询单个派工单信息-->
    <select id="serviceDetailById" resultType="java.util.Map">
        SELECT
            DISTINCT
            rdd.*,
            re.dispatchingOrder IS NOT NULL AS error
        FROM
            t_region_dispatching_detail rdd
                LEFT JOIN t_region_error re ON re.dispatchingOrder = rdd.dispatchingOrder
        WHERE
            rdd.dispatchingOrder = #{dispatchingOrder}
    </select>
    <!--通过派工单号查询单个二次上门认定信息-->
    <select id="secondDoorById" resultType="java.util.Map">
        select dispatchingOrder,creationTime,systemState,finalDecision,jobOrder,relevantJobOrder
        from t_region_second_door
        where dispatchingOrder = #{dispatchingOrder}
    </select>
    <!--查询全部服务店信息-->
    <select id="storeList" resultType="java.util.Map">
        select * from t_region_service_store
    </select>
    <!--计算30分钟预约达标和总量，需关联表：t_region_dispatching_detail rdd，t_region_service_store rss-->
    <sql id="timelyCalculate">
        IFNULL(SUM(IF (

        rdd.dispatchingSource &lt;&gt; '自接'
        AND rdd.serviceType &lt;&gt; '非上门维修'
        AND rdd.systemState NOT IN ('已作废','已关闭','申请作废')

        ,(CASE

        WHEN SUBSTR(rdd.startTimeOfAssessment, 12,5) &lt; LPAD(rss.openingTime,8,0)
        THEN IF (TIMESTAMPDIFF(MINUTE,
        CONCAT(LEFT (rdd.startTimeOfAssessment, 11),LPAD(rss.openingTime,8,0)),
        rdd.appointmentOperationTime ) &lt;= 60,1,0)

        WHEN SUBSTR(rdd.startTimeOfAssessment, 12,5) &gt; LPAD(rss.closingTime,8,0)
        THEN IF (TIMESTAMPDIFF(MINUTE,
        (DATE_ADD(str_to_date(CONCAT(LEFT (rdd.startTimeOfAssessment, 11),LPAD(rss.openingTime,8,0)),'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY)),
        rdd.appointmentOperationTime) &lt;= 60,1,0)

        ELSE IF (TIMESTAMPDIFF(MINUTE,
        rdd.startTimeOfAssessment,
        rdd.appointmentOperationTime) &lt;= 30,1,0)
        END),
        0)),0) AS timelyEligible,

        IFNULL(SUM(IF (

        rdd.dispatchingSource &lt;&gt; '自接'
        AND rdd.serviceType &lt;&gt; '非上门维修'
        AND rdd.systemState NOT IN ('已作废','已关闭','申请作废')

        ,1,0)),0) AS timelyTotal
    </sql>
    <!--预约准时上门达标和总量，需关联表：t_region_dispatching_detail rdd-->
    <sql id="punctualityCalculate">
        IFNULL(
        SUM(IF (

        rdd.serviceType &lt;&gt; '非上门维修'
        AND rdd.systemState IN ('已上门','已服务','已完成')

        ,IF (
        LEFT (rdd.appointmentTimeSection,16) &lt;= rdd.visitTime
        AND rdd.visitTime &lt;= CONCAT(LEFT (rdd.appointmentTimeSection,11),RIGHT (rdd.appointmentTimeSection, 5)),
        1,0),0)),0) AS punctualityEligible,

        IFNULL(SUM(IF (

        rdd.serviceType &lt;&gt; '非上门维修'
        AND rdd.systemState IN ('已上门','已服务','已完成')

        ,1,0)),0) AS punctualityTotal
    </sql>
    <!--首次预约准时上门达标和总量，需关联表：t_region_dispatching_detail rdd，gdCalculateTable gct-->
    <sql id="firstPunctualityCalculate">
        IFNULL(SUM(IF(

        rdd.serviceType  &lt;&gt;  '非上门维修'
        AND rdd.systemState IN ('已上门','已服务','已完成')
        AND (gct.two=0 OR  ISNULL(gct.two))

        ,IF (
        LEFT (rdd.firstAppointmentTimeSection,16)  &lt;= rdd.firstVisitTime
        AND rdd.firstVisitTime  &lt;=  CONCAT(LEFT (rdd.firstAppointmentTimeSection,11) , RIGHT (rdd.firstAppointmentTimeSection, 5))
        ,1,0),0)),0) AS firstPunctualityEligible,

        IFNULL(SUM(IF(

        rdd.serviceType  &lt;&gt;  '非上门维修'
        AND rdd.systemState IN ('已上门','已服务','已完成')
        AND (gct.two=0 OR  ISNULL(gct.two))

        ,1,0)),0)AS firstPunctualityTotal
    </sql>

    <!--TAT平均服务时长及N天达标率，需关联表：t_region_dispatching_detail rdd，avgTimeTable att-->
    <sql id="averageCalculate">
        IF(AVG(att.longTime) DIV (24*60*60)>1,
        CONCAT(AVG(att.longTime) DIV (24*60*60),'天',(AVG(att.longTime)-((AVG(att.longTime) DIV (24*60*60))*24*60*60)) DIV (60*60),'小时'),
        CONCAT(IFNULL(AVG(att.longTime) DIV (60*60),0),'小时')
        ) AS avgDay,

        AVG(att.longTime) DIV (60*60) AS average,

        IFNULL(SUM(IF(

        att.longTime IS NOT NULL
        AND att.longTime  &lt;= (#{AvgTimeRate} *60 *60)

        ,1,0)),0)AS averageEligible,

        count(1)AS averageTotal
    </sql>

    <!--投诉7天解决率，需关联表：t_region_dispatching_detail rdd，t_complaint_handling ch-->
    <sql id="solveCalculate">
        IFNULL(SUM(IF(

        ch.complaintType = '服务投诉'

        ,IF(TIMESTAMPDIFF(SECOND,ch.complaintStartTime,ch.complaintEndTime) &lt;= (7*24*60*60)
        ,1,0),0)),0)AS solveEligible,

        IFNULL(SUM(IF(

        ch.complaintType = '服务投诉'

        ,1,0)),0)AS solveTotal
    </sql>
    <!--一次修复达标和总量，需关联表：t_region_dispatching_detail rdd，gdCalculateTable gct，t_region_second_door rsd-->
    <sql id="repairCalculate">
        IFNULL(SUM(CASE WHEN
        rdd.serviceType = '非上门维修'
        THEN IF(ISNULL(rsd.dispatchingOrder),1,0)
        ELSE IF(gct.two &gt;  0,0,1)END)
        ,0) AS repairEligible,

        IFNULL(SUM(IF(rdd.dispatchingOrder IS NOT NULL,1,0)),0)AS repairTotal
    </sql>
    <!--2天维修达成达标和总量，需关联表：t_region_dispatching_detail rdd-->
    <sql id="maintainCalculate">
        IFNULL(SUM(IF(

        rdd.serviceType = '维修'

        ,IF(TIMESTAMPDIFF(SECOND,rdd.startTimeOfAssessment,rdd.finishTime ) &lt;=(2*24*60*60)
        ,1,0),0)),0)AS maintainEligible,

        IFNULL(SUM(IF(

        rdd.serviceType = '维修'

        ,1,0)),0)AS maintainTotal
    </sql>
    <!--N+1投诉解决方案提交达标数和总数，需关联表：t_region_dispatching_detail rdd，t_complaint_handling ch-->
    <sql id="schemeCalculate">
        IFNULL(SUM(IF(

        ch.complaintType = '服务投诉'

        ,IF(TIMESTAMPDIFF(SECOND,ch.complaintStartTime,ch.solutionSubmissionTime )&lt;=(1*24*60*60),1,0),0)),0)AS schemeEligible,

        IFNULL(SUM(IF(

        ch.complaintType = '服务投诉'

        ,1,0)),0)AS schemeTotal
    </sql>
    <!--按派工单聚合挂单跨天数量-->
    <sql id="gdCalculateTable">
        LEFT JOIN (
        SELECT rpo2.dispatchingOrder,
        SUM(IF(LEFT(rpo2.pendingOrderTime,10) &lt;&gt; LEFT(IFNULL(rpo2.finishOrderTime,DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s')),10),1,0))two
        FROM t_region_pending_order rpo2
        GROUP BY rpo2.dispatchingOrder
        )gct ON gct.dispatchingOrder = rdd.dispatchingOrder
    </sql>
    <!--派工单服务时长-->
    <sql id="avgTimeTable">
        LEFT JOIN (SELECT rdd2.dispatchingOrder,
        (CASE
            WHEN  rdd2.serviceType = '非上门维修'
            THEN TIMESTAMPDIFF(SECOND,rdd2.startTimeOfAssessment,IFNULL(rdd2.exchangeMaintain,rdd2.customerDeliveryTime))
            ELSE  TIMESTAMPDIFF(SECOND,rdd2.startTimeOfAssessment,rdd2.finishTime)-IFNULL(SUM(TIMESTAMPDIFF(SECOND,rpo3.pendingOrderTime,rpo3.finishOrderTime)),0)
        END) AS longTime
        FROM t_region_dispatching_detail rdd2
        LEFT JOIN t_region_pending_order rpo3 ON rpo3.dispatchingOrder=rdd2.dispatchingOrder
        AND rdd2.systemState &lt;&gt; '已作废'
        AND rdd2.serviceType IN ('安装','维修','鉴定','非上门维修')
        <if test="startTime != null and startTime != '' ">
            AND  rdd2.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd2.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd2.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd2.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productTypeCode != null and productTypeCode.size>0 ">
            AND  rdd2.productTypeCode IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>
            ) att ON att.dispatchingOrder=rdd.dispatchingOrder
        </if>
        <if test="serviceType != null and serviceType != '' ">
            AND  rdd2.serviceType = #{serviceType}
        </if>
        <if test="maintainWay != null and maintainWay != '' ">
            AND  rdd2.maintainWay = #{maintainWay}
        </if>
        GROUP BY rdd2.dispatchingOrder,rdd2.startTimeOfAssessment,rdd2.exchangeMaintain,rdd2.customerDeliveryTime,rdd2.finishTime
            )att ON att.dispatchingOrder = rdd.dispatchingOrder
    </sql>
    <!--单个30分钟预约及时率-->
    <select id="timely" resultType="java.util.Map">
        SELECT
            SUM(rdd.timelyEligible)AS eligible,COUNT(1) AS total
            FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
            LEFT JOIN t_region_service_store rss
            ON rss.storeNumber = rdd.storeNumber
            AND rss.accountingCenterCode = rdd.accountingCenterCode
            WHERE
            rdd.systemState NOT IN ('已作废','已关闭','申请作废')
            AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
            AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
            <if test="startTime != null and startTime != '' ">
                AND  rdd.dispatchingTime &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime != '' ">
                AND  rdd.dispatchingTime &lt;= #{endTime}
            </if>
            <if test="accountingAreaCode != null and accountingAreaCode != '' ">
                AND  rdd.accountingAreaCode = #{accountingAreaCode}
            </if>
            <if test="storeNumber != null and storeNumber != '' ">
                AND  rdd.storeNumber = #{storeNumber}
            </if>
            <if test="accountingCenterCode != null and accountingCenterCode != '' ">
                AND  rdd.accountingCenterCode = #{accountingCenterCode}
            </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
        AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>

    </select>
    <!--按日聚合30分钟预约及时率-->
    <select id="dateTimely" resultType="java.util.Map">
        SELECT LEFT(rdd.dispatchingTime,10) AS dispatchingTime,
        SUM(rdd.timelyEligible)AS eligible,COUNT(1) AS total
               FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
                LEFT JOIN t_region_service_store rss
                ON rss.storeNumber = rdd.storeNumber
                AND rss.accountingCenterCode = rdd.accountingCenterCode
                WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        <if test="startTime != null and startTime != '' ">
                    AND  rdd.dispatchingTime &gt;= #{startTime}
                </if>
                <if test="endTime != null and endTime != '' ">
                    AND  rdd.dispatchingTime &lt;= #{endTime}
                </if>
                <if test="accountingAreaCode != null and accountingAreaCode != '' ">
                    AND  rdd.accountingAreaCode = #{accountingAreaCode}
                </if>
                <if test="storeNumber != null and storeNumber != '' ">
                    AND  rdd.storeNumber = #{storeNumber}
                </if>
                <if test="accountingCenterCode != null and accountingCenterCode != '' ">
                    AND  rdd.accountingCenterCode = #{accountingCenterCode}
                </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
                GROUP BY LEFT(rdd.dispatchingTime,10)

    </select>
    <!--单个预约准时上门率-->
    <select id="punctuality" resultType="java.util.Map">
        SELECT
        SUM(rdd.punctualityEligible)AS eligible,COUNT(1) AS total
            FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
            LEFT JOIN t_region_service_store rss
            ON rss.storeNumber = rdd.storeNumber
            AND rss.accountingCenterCode = rdd.accountingCenterCode
            WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
     AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
    </select>
    <!--按日聚合预约准时上门率-->
    <select id="datePunctuality" resultType="java.util.Map">
       SELECT LEFT(rdd.dispatchingTime,10) AS dispatchingTime,
        SUM(rdd.punctualityEligible)AS eligible,COUNT(1) total
             FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
                LEFT JOIN t_region_service_store rss
                ON rss.storeNumber = rdd.storeNumber
                AND rss.accountingCenterCode = rdd.accountingCenterCode
             WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY LEFT(rdd.dispatchingTime,10)

    </select>
    <!--单个首次预约准时上门率-->
    <select id="fristPunctuality" resultType="java.util.Map">
        SELECT
        SUM(rdd.firstPunctualityEligible)AS eligible,COUNT(1) AS total
        FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE  rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
    </select>
    <!--按日聚合首次预约准时上门率-->
    <select id="fristDatePunctuality" resultType="java.util.Map">
        SELECT LEFT(rdd.dispatchingTime,10) AS dispatchingTime,
        SUM(rdd.firstPunctualityEligible)AS eligible,COUNT(1) AS total
        FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY LEFT(rdd.dispatchingTime,10)
    </select>
    <!--单个TAT平均服务完成时长-->
    <select id="average" resultType="java.util.Map">
        SELECT
        SUM(rdd.averageEligible)AS eligible,SUM(rdd.averageEligible IS NOT NULL) AS total,ROUND(AVG(rdd.average)/3600) AS average
        FROM t_region_dispatching_detail rdd force index (in_wc,in_t)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        AND rdd.averageEligible IS NOT NULL
         <if test="startTime != null and startTime != '' ">
            AND  rdd.TATFinishTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.TATFinishTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
    </select>
    <!--按日聚合TAT平均服务完成时长-->
    <select id="dateAverage" resultType="java.util.Map">
        SELECT  LEFT(rdd.TATFinishTime,10) AS dispatchingTime,ROUND(AVG(rdd.average)/3600) AS average,
        IFNULL(SUM(rdd.averageEligible),0)AS eligible,IFNULL(SUM(rdd.averageEligible IS NOT NULL),0) AS total
        FROM t_region_dispatching_detail rdd force index (in_wc,in_t)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')

        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        AND rdd.averageEligible IS NOT NULL
        <if test="startTime != null and startTime != '' ">
            AND  rdd.TATFinishTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.TATFinishTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY LEFT(rdd.TATFinishTime,10)

    </select>
    <!--单个投诉7天解决率-->
    <select id="solve" resultType="java.util.Map">
        SELECT
        SUM(rdd.solveEligible)AS eligible,SUM(rdd.solveEligible IS NOT NULL) AS total
            FROM t_region_dispatching_detail rdd  force index(in_dt,in_or)
            LEFT JOIN t_region_service_store rss
            ON rss.storeNumber = rdd.storeNumber
            AND rss.accountingCenterCode = rdd.accountingCenterCode
            WHERE  rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>

    </select>
    <!--按日聚合投诉7天解决率-->
    <select id="dateSolve" resultType="java.util.Map">
        SELECT LEFT(rdd.dispatchingTime,10) AS dispatchingTime,
        SUM(rdd.solveEligible)AS eligible,SUM(rdd.solveEligible IS NOT NULL) AS total
        FROM t_region_dispatching_detail rdd  force index(in_dt,in_or)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY LEFT(rdd.dispatchingTime,10)

    </select>
    <!--单个一次修复率-->
    <select id="repair" resultType="java.util.Map">
        SELECT
        SUM(rdd.repairEligible)AS eligible,SUM(rdd.repairEligible IS NOT NULL)  AS total
        FROM t_region_dispatching_detail rdd  force index(in_dt,in_or)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('维修','非上门维修')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>

    </select>
    <!--按日聚合一次修复率-->
    <select id="dateRepair" resultType="java.util.Map">
       SELECT LEFT(rdd.dispatchingTime,10) AS dispatchingTime,
        SUM(rdd.repairEligible)AS eligible,SUM(rdd.repairEligible IS NOT NULL)  AS total
        FROM t_region_dispatching_detail rdd  force index(in_dt,in_or)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('维修','非上门维修')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY LEFT(rdd.dispatchingTime,10)

    </select>
    <!--单个2天维修达成率-->
    <select id="maintain" resultType="java.util.Map">
        SELECT t.maintainEligible AS eligible, t.maintainTotal AS total,
               CAST(IFNULL(ROUND(t.maintainEligible / t.maintainTotal*100,1  ),0) AS CHAR) AS rate
        FROM(
            SELECT
        SUM(rdd.maintainEligible)AS maintainEligible,SUM(rdd.maintainEligible IS NOT NULL)maintainTotal
            FROM t_region_dispatching_detail rdd
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
            WHERE rdd.serviceType = '维修'
            AND rdd.finishTime IS NOT NULL
            AND rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        )t
    </select>
    <!--按日聚合2天维修达成率-->
    <select id="dateMaintain" resultType="java.util.Map">
        SELECT t.dispatchingTime,t.maintainEligible AS eligible, t.maintainTotal AS total,
        CAST(IFNULL(ROUND(t.maintainEligible / t.maintainTotal*100,1  ),0) AS CHAR) AS rate
        FROM(
        SELECT LEFT(rdd.dispatchingTime,10) AS dispatchingTime,
        SUM(rdd.maintainEligible)AS maintainEligible,SUM(rdd.maintainEligible IS NOT NULL)maintainTotal
        FROM t_region_dispatching_detail rdd
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.serviceType = '维修'
        AND rdd.finishTime IS NOT NULL
        AND rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
            GROUP BY LEFT(rdd.dispatchingTime,10)
        )t
    </select>
    <!--单个N+1投诉解决方案提交率-->
    <select id="scheme" resultType="java.util.Map">

            SELECT
        SUM(rdd.schemeEligible)AS eligible,SUM(rdd.schemeEligible IS NOT NULL) AS total
            FROM t_region_dispatching_detail rdd  force index(in_dt,in_or)
            LEFT JOIN t_region_service_store rss
            ON rss.storeNumber = rdd.storeNumber
            AND rss.accountingCenterCode = rdd.accountingCenterCode
            WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>

    </select>
    <!--按日聚合N+1投诉解决方案提交率-->
    <select id="dateScheme" resultType="java.util.Map">

            SELECT LEFT(rdd.dispatchingTime,10) AS dispatchingTime,
        SUM(rdd.schemeEligible)AS eligible,SUM(rdd.schemeEligible IS NOT NULL) AS total
            FROM t_region_dispatching_detail rdd  force index(in_dt,in_or)
            LEFT JOIN t_region_service_store rss
            ON rss.storeNumber = rdd.storeNumber
            AND rss.accountingCenterCode = rdd.accountingCenterCode
            WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
            GROUP BY LEFT(rdd.dispatchingTime,10)

    </select>
    <!--列表查询五大指标-->
    <select id="indexList" resultType="java.util.Map">
        SELECT t.*
        <if test="from == null or from == ''">
            ,IF (
            t.smTotal = 0
            OR t.smTotal IS NULL,
            "",CAST(IFNULL(ROUND(t.timelyEligible/t.smTotal*100,1 ),0) AS CHAR)) AS timelyPercentage
            ,IF (
            t.smTotal = 0
            OR t.smTotal IS NULL,
            "",CAST(IFNULL(ROUND(t.firstPunctualityEligible/t.smTotal*100,1 ),0) AS CHAR)) AS firstPunctualityPercentage
            ,IF (
            t.repairTotal = 0
            OR t.repairTotal IS NULL,
            "",CAST(IFNULL(ROUND(t.repairEligible/t.repairTotal*100,1 ),0) AS CHAR)) AS repairPercentage

        </if>
        <if test="from == 'timelyPercentage'">
            ,IF (
            t.smTotal = 0
            OR t.smTotal IS NULL,
            "",CAST(IFNULL(ROUND(t.timelyEligible/t.smTotal*100,1 ),0) AS CHAR)) AS timelyPercentage
        </if>
        <if test="from == 'firstPunctualityPercentage'">
            ,IF (
            t.smTotal = 0
            OR t.smTotal IS NULL,
            "",CAST(IFNULL(ROUND(t.firstPunctualityEligible/t.smTotal*100,1 ),0) AS CHAR)) AS firstPunctualityPercentage
        </if>
        <if test="from == 'repairPercentage'">
            ,IF (
            t.repairTotal = 0
            OR t.repairTotal IS NULL,
            "",CAST(IFNULL(ROUND(t.repairEligible/t.repairTotal*100,1 ),0) AS CHAR)) AS repairPercentage
        </if>
        <if test="from == 'punctualityPercentage'">
            ,IF (
            t.smTotal = 0
            OR t.smTotal IS NULL,
            "",CAST(IFNULL(ROUND(t.punctualityEligible/t.smTotal*100,1 ),0) AS CHAR)) AS punctualityPercentage
        </if>
        FROM(SELECT
        <if test="FIELDS != null and FIELDS != '' ">
            ${FIELDS},
        </if>
        <if test="from == null or from == ''">
            SUM(IF(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.timelyEligible,0))AS timelyEligible,
            SUM(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')) AND rdd.timelyEligible IS NOT NULL)timelyTotal,
            SUM(IF((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道'),1,0))smTotal,
            SUM(IF(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.firstPunctualityEligible,0))AS firstPunctualityEligible,
            SUM(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')) AND rdd.firstPunctualityEligible IS NOT NULL)firstPunctualityTotal,
            SUM(IF(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.solveEligible,0))AS solveEligible,
            SUM(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')) AND rdd.solveEligible IS NOT NULL)solveTotal,
            SUM(IF((rdd.serviceType IN ('维修','非上门维修')AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.repairEligible,0))AS repairEligible,
            SUM(rdd.serviceType IN ('维修','非上门维修')AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道') AND rdd.repairEligible IS NOT NULL)repairTotal,
            SUM(IF(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.schemeEligible,0))AS schemeEligible,
            SUM(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')) AND rdd.schemeEligible IS NOT NULL)schemeTotal
        </if>
        <if test="from == 'timelyPercentage'">
            SUM(IF(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.timelyEligible,0))AS timelyEligible,
            SUM(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')) AND rdd.timelyEligible IS NOT NULL)timelyTotal,
            SUM(IF((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道'),1,0))smTotal
        </if>
        <if test="from == 'firstPunctualityPercentage'">
            SUM(IF(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.firstPunctualityEligible,0))AS firstPunctualityEligible,
            SUM(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')) AND rdd.firstPunctualityEligible IS NOT NULL)firstPunctualityTotal,
            SUM(IF((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道'),1,0))smTotal
        </if>
        <if test="from == 'solvePercentage'">
            SUM(IF(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.solveEligible,0))AS solveEligible,
            SUM(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')) AND rdd.solveEligible IS NOT NULL)solveTotal
        </if>
        <if test="from == 'repairPercentage'">
            SUM(IF((rdd.serviceType IN ('维修','非上门维修')AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.repairEligible,0))AS repairEligible,
            SUM(rdd.serviceType IN ('维修','非上门维修')AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道') AND rdd.repairEligible IS NOT NULL)repairTotal
        </if>
        <if test="from == 'punctualityPercentage'">
            SUM(IF(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.punctualityEligible,0))AS punctualityEligible,
            SUM(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')) AND rdd.punctualityEligible IS NOT NULL)punctualityTotal,
            SUM(IF((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道'),1,0))smTotal
        </if>
        <if test="from == 'schemePercentage'">
            SUM(IF(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')),rdd.schemeEligible,0))AS schemeEligible,
            SUM(((rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修'))) AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')) AND rdd.schemeEligible IS NOT NULL)schemeTotal
        </if>


        FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        LEFT JOIN t_district_accounting da ON da.areaCode = rdd.accountingAreaCode
        <if test="TABLES != null and TABLES != '' ">
            ${TABLES}
        </if>
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')

            <if test="startTime != null and startTime != '' ">
                AND  rdd.dispatchingTime &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime != '' ">
                AND  rdd.dispatchingTime &lt;= #{endTime}
            </if>
            <if test="accountingAreaCode != null and accountingAreaCode != '' ">
                AND  rdd.accountingAreaCode = #{accountingAreaCode}
            </if>
            <if test="storeNumber != null and storeNumber != '' ">
                AND  rdd.storeNumber = #{storeNumber}
            </if>
            <if test="accountingCenterCode != null and accountingCenterCode != '' ">
                AND  rdd.accountingCenterCode = #{accountingCenterCode}
            </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
            <if test="serviceType != null and serviceType != '' ">
                AND  rdd.serviceType = #{serviceType}
            </if>
            <if test="provincesCode != null and provincesCode != '' ">
                AND  rdd.provincesCode = #{provincesCode}
            </if>
            <if test="maintainWay != null and maintainWay != '' ">
                AND  rdd.maintainWay = #{maintainWay}
            </if>
            <if test="WHERES != null and WHERES !=''">
                AND (${WHERES})
            </if>
        <if test="GROUPFIELDS != null and GROUPFIELDS != '' ">
            GROUP BY ${GROUPFIELDS}
        </if>
        <if test="GROUPFIELDS == null and FIELDS != null and FIELDS != '' ">
            GROUP BY ${FIELDS}
        </if>
        )t
    </select>
    <!--列表查询五大指标-->
    <select id="indexListT" resultType="java.util.Map">
        SELECT t.*,
        CAST(IFNULL(ROUND(t.averageEligible/t.averageTotal*100,1 ),0) AS CHAR) AS averagePercentage,
        IF(t.average>24 ,CONCAT( FLOOR(t.average/24),' 天 ', t.average MOD 24, ' 小时'),CONCAT(t.average, ' 小时'))AS avgDay
        FROM(SELECT
        <if test="FIELDS != null and FIELDS != '' ">
            ${FIELDS},
        </if>
        SUM(rdd.averageEligible)AS averageEligible,SUM(rdd.averageEligible IS NOT NULL)averageTotal,
        ROUND(AVG(IF( rdd.averageEligible IS NOT NULL,rdd.average,NULL))/3600)AS average
        FROM t_region_dispatching_detail rdd force index (in_wc,in_t)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        LEFT JOIN t_district_accounting da ON da.areaCode = rdd.accountingAreaCode
        <if test="TABLES != null and TABLES != '' ">
            ${TABLES}
        </if>
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')

        <if test="startTime != null and startTime != '' ">
            AND  rdd.TATFinishTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.TATFinishTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="serviceType != null and serviceType != '' ">
            AND  rdd.serviceType = #{serviceType}
        </if>
        <if test="provincesCode != null and provincesCode != '' ">
            AND  rdd.provincesCode = #{provincesCode}
        </if>
        <if test="maintainWay != null and maintainWay != '' ">
            AND  rdd.maintainWay = #{maintainWay}
        </if>
        <if test="NOTNULL != null and NOTNULL !=''">
            AND length(trim(${NOTNULL})) &gt; 0
        </if>
        <if test="WHERES != null and WHERES !=''">
            AND (${WHERES})
        </if>
        <if test="GROUPFIELDS != null and GROUPFIELDS != '' ">
            GROUP BY ${GROUPFIELDS}
        </if>
        <if test="GROUPFIELDS == null and FIELDS != null and FIELDS != '' ">
            GROUP BY ${FIELDS}
        </if>
        )t
    </select>
    <!--列表查询五大指标-->
    <select id="indexListS" resultType="java.util.Map">
        SELECT t.*,t.solveTotal AS schemeTotal,
               CAST(IFNULL(ROUND(t.solveEligible/t.solveTotal*100,1 ),0) AS CHAR) AS solvePercentage,
               CAST(IFNULL(ROUND(t.schemeEligible/t.solveTotal*100,1 ),0) AS CHAR) AS schemePercentage
        FROM (SELECT
        <if test="FIELDS != null and FIELDS != '' ">
            ${FIELDS},
        </if>
        SUM(TIMESTAMPDIFF(
        DAY,
        cast( complaintStartTime AS date ),
        IF
        ( length( trim( solutionLandingTime )) &gt; 0, cast( solutionLandingTime AS date ), cast( complaintEndTime AS date ) )) - exceptionDay &lt;= 7)
        AS solveEligible,
        SUM(TIMESTAMPDIFF(DAY,cast(complaintStartTime as date),cast(solutionSubmissionTime as date)) &lt;= 1) AS schemeEligible,
        COUNT(1) AS solveTotal
        FROM
        t_complaint_handling ch
        LEFT JOIN t_region_service_store rss ON rss.accountingCenterCode = ch.accountingCenterCode
        AND rss.storeNumber = ch.storeNumber
        LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = ch.dispatchingOrder
        LEFT JOIN t_district_accounting da ON da.areaCode = rdd.accountingAreaCode
        <if test="TABLES != null and TABLES != '' ">
            ${TABLES}
        </if>
        WHERE 1=1
        <if test="startTime != null and startTime != '' ">
            AND  ch.complaintStartTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  ch.complaintStartTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  ch.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  ch.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  ch.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="complaintType != null and complaintType != ''">
            and ch.complaintType = #{complaintType}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (ch.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR ch.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND ch.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND ch.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="serviceType != null and serviceType != '' ">
            AND  rdd.serviceType = #{serviceType}
        </if>
        <if test="provincesCode != null and provincesCode != '' ">
            AND  ch.provincesCode = #{provincesCode}
        </if>
        <if test="maintainWay != null and maintainWay != '' ">
            AND  rdd.maintainWay = #{maintainWay}
        </if>
        <if test="NOTNULL != null and NOTNULL !=''">
            AND length(trim(${NOTNULL})) &gt; 0
        </if>
        <if test="WHERES != null and WHERES !=''">
            AND (${WHERES})
        </if>
        <if test="GROUPFIELDS != null and GROUPFIELDS != '' ">
            GROUP BY ${GROUPFIELDS}
        </if>
        <if test="GROUPFIELDS == null and FIELDS != null and FIELDS != '' ">
            GROUP BY ${FIELDS}
        </if>
        )t
    </select>
    <!--TAB页值-->
    <select id="tabValue" resultType="java.util.Map">
        SELECT
        t.average,
        IF(t.average&gt;24,CONCAT(ROUND(t.average DIV 24),'天',IFNULL(ROUND(t.average MOD 24),0),'小时'),CONCAT(IFNULL(ROUND(t.average MOD 24),0),'小时'))AS avgDay,
        IF(t.hjaverage&gt;24,CONCAT(ROUND(t.hjaverage DIV 24),'天',IFNULL(ROUND(t.hjaverage MOD 24),0),'小时'),CONCAT(IFNULL(ROUND(t.hjaverage MOD 24),0),'小时'))AS hjavgDay,
        IF(t.bhjaverage&gt;24,CONCAT(ROUND(t.bhjaverage DIV 24),'天',IFNULL(ROUND(t.bhjaverage MOD 24),0),'小时'),CONCAT(IFNULL(ROUND(t.bhjaverage MOD 24),0),'小时'))AS bhjavgDay,
        IF(t.azaverage&gt;24,CONCAT(ROUND(t.azaverage DIV 24),'天',IFNULL(ROUND(t.azaverage MOD 24),0),'小时'),CONCAT(IFNULL(ROUND(t.azaverage MOD 24),0),'小时'))AS azavgDay,
        IF(t.jdaverage&gt;24,CONCAT(ROUND(t.jdaverage DIV 24),'天',IFNULL(ROUND(t.jdaverage MOD 24),0),'小时'),CONCAT(IFNULL(ROUND(t.jdaverage MOD 24),0),'小时'))AS jdavgDay,
        IF(t.fsmaverage&gt;24,CONCAT(ROUND(t.fsmaverage DIV 24),'天',IFNULL(ROUND(t.fsmaverage MOD 24),0),'小时'),CONCAT(IFNULL(ROUND(t.fsmaverage MOD 24),0),'小时'))AS fsmavgDay,
        CAST(IFNULL(ROUND(t.averageEligible/t.averageTotal*100,1 ),0) AS CHAR) AS avgDay2,
        CAST(IFNULL(ROUND(t.bhjaverageEligible/t.bhjaverageTotal*100,1 ),0) AS CHAR) AS hjavgDay2,
        CAST(IFNULL(ROUND(t.hjaverageEligible/t.hjaverageTotal*100,1 ),0) AS CHAR) AS bhjavgDay2,
        CAST(IFNULL(ROUND(t.azaverageEligible/t.azaverageTotal*100,1 ),0) AS CHAR) AS azavgDay2,
        CAST(IFNULL(ROUND(t.jdaverageEligible/t.jdaverageTotal*100,1 ),0) AS CHAR) AS jdavgDay2,
        CAST(IFNULL(ROUND(t.fsmaverageEligible/t.fsmaverageTotal*100,1 ),0) AS CHAR) AS fsmavgDay2
        FROM(SELECT
        AVG(IF( a.averageEligible IS NOT NULL,a.average,NULL))/3600 AS average,

        IFNULL(SUM(a.averageEligible),0)AS averageEligible,

        IFNULL(SUM(a.averageEligible IS NOT NULL),0)AS averageTotal,

        AVG(IF( a.serviceType ='维修' AND a.maintainWay='调换' AND  a.averageEligible IS NOT NULL,a.average,NULL))/3600 AS hjaverage,

        IFNULL(SUM(IF(a.serviceType ='维修' AND a.maintainWay='调换' AND a.average &lt;= (24*4*60*60),1,0)),0)AS hjaverageEligible,

        IFNULL(SUM(IF(a.average IS NOT NULL AND a.serviceType ='维修' AND a.maintainWay='调换',1,0)),0)AS hjaverageTotal,

        AVG(IF(a.serviceType ='维修' AND a.maintainWay&lt;&gt;'调换'  AND a.averageEligible IS NOT NULL,a.average,NULL))/3600 AS bhjaverage,

        IFNULL(SUM(IF( a.serviceType ='维修' AND a.maintainWay&lt;&gt;'调换' AND a.average &lt;= (24*4*60*60),1,0)),0)AS bhjaverageEligible,

        IFNULL(SUM(IF(a.average IS NOT NULL AND a.serviceType ='维修' AND a.maintainWay&lt;&gt;'调换',1,0)),0)AS bhjaverageTotal,

        AVG(IF( a.serviceType ='安装'  AND a.averageEligible IS NOT NULL,a.average,NULL))/3600 AS azaverage,

        IFNULL(SUM(IF(a.serviceType ='安装'  AND a.average &lt;= (24*4*60*60),1,0)),0)AS azaverageEligible,

        IFNULL(SUM(IF(a.average IS NOT NULL AND a.serviceType ='安装' ,1,0)),0)AS azaverageTotal,

        AVG(IF(a.serviceType ='鉴定' AND  a.averageEligible IS NOT NULL,a.average,NULL))/3600 AS jdaverage,

        IFNULL(SUM(IF( a.serviceType ='鉴定'  AND a.average &lt;= (24*4*60*60),1,0)),0)AS jdaverageEligible,

        IFNULL(SUM(IF(a.average IS NOT NULL AND a.serviceType ='鉴定' ,1,0)),0)AS jdaverageTotal,

        AVG(IF(a.serviceType ='非上门维修' AND  a.averageEligible IS NOT NULL,a.average,NULL))/3600 AS fsmaverage,

        IFNULL(SUM(IF(a.serviceType ='非上门维修'  AND a.average &lt;= (24*4*60*60),1,0)),0)AS fsmaverageEligible,

        IFNULL(SUM(IF(a.average IS NOT NULL AND a.serviceType ='非上门维修' ,1,0)),0)AS fsmaverageTotal

        FROM t_region_dispatching_detail a force index (in_wc,in_t)
        LEFT JOIN t_region_service_store b
        ON b.storeNumber = a.storeNumber
        AND b.accountingCenterCode = a.accountingCenterCode
        WHERE a.systemState NOT IN ('已作废','已关闭','申请作废')
        AND a.serviceType IN ('安装','维修','鉴定','非上门维修')
        AND a.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        <if test="startTime != null and startTime != '' ">
                AND  a.TATFinishTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
                AND  a.TATFinishTime &lt;= #{endTime}
        </if>
        <if test="provincesCode != null and provincesCode != '' ">
            AND  a.provincesCode = #{provincesCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (a.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR a.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND a.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND a.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        )t
    </select>
    <select id="tabValue1" resultType="java.util.Map">
        SELECT
        CAST(IFNULL(ROUND(t.firstPunctualityEligible/t.punctualityTotal*100,1 ),0) AS CHAR) AS firstPunctualityPercentage,
        CAST(IFNULL(ROUND(t.punctualityEligible/t.punctualityTotal*100,1 ),0) AS CHAR) AS punctualityPercentage
        FROM(SELECT
        IFNULL(SUM(a.firstPunctualityEligible),0) AS firstPunctualityEligible,


        IFNULL(SUM(a.punctualityEligible),0) AS punctualityEligible,

        count(1) AS punctualityTotal

        FROM t_region_dispatching_detail a force index (in_dt,in_t)
        LEFT JOIN t_region_service_store b
        ON b.storeNumber = a.storeNumber
        AND b.accountingCenterCode = a.accountingCenterCode
        WHERE a.systemState NOT IN ('已作废','已关闭','申请作废')
        AND a.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND (a.serviceType IN ('安装','维修') OR (a.serviceType = '鉴定' AND a.firstServiceType IN ('安装','维修')))
        <if test="startTime != null and startTime != '' ">
            AND  a.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  a.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="provincesCode != null and provincesCode != '' ">
            AND  a.provincesCode = #{provincesCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (a.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR a.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND a.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND a.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        )t
    </select>
    <select id="tabValue2" resultType="java.util.Map">
        SELECT
        concat(
        round(
        ifnull(
        sum(
        ifnull(
        TIMESTAMPDIFF(
        DAY,
        cast(complaintStartTime AS date),
        IF (
        length(trim(solutionLandingTime)) &gt; 0,
        cast(solutionLandingTime AS date),
        cast(complaintEndTime AS date)
        )
        ) - exceptionDay &lt;= 7,
        0
        )
        ) / count(1) * 100,
        0
        ),
        1
        ),
        '%'
        ) sevenSolveRate,
        ('全部投诉') complaintType
        FROM
        t_complaint_handling a
        <where>
            <if test="startTime != null and startTime != ''">
                and cast(complaintStartTime as date) &gt;= #{startTime}
            </if>
            <if test=" endTime != null and  endTime != ''">
                and cast(complaintStartTime as date) &lt;= #{endTime}
            </if>
            <if test="(productTypeCode != null and productTypeCode.size > 0) or (productCategoryCode != null and productCategoryCode.size > 0)">
                AND( 1=2
                <if test="productTypeCode != null and productTypeCode.size > 0">
                    OR a.productTypeCode IN
                    <foreach collection="productTypeCode" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="productCategoryCode != null and productCategoryCode.size > 0">
                    OR a.productCategoryCode IN
                    <foreach collection="productCategoryCode" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                )
            </if>
        </where>
        UNION ALL
        SELECT
        concat(
        round(
        ifnull(
        sum(
        ifnull(
        TIMESTAMPDIFF(
        DAY,
        cast(complaintStartTime AS date),
        IF (
        length(trim(solutionLandingTime)) &gt; 0,
        cast(solutionLandingTime AS date),
        cast(complaintEndTime AS date)
        )
        ) - exceptionDay &lt;= 7,
        0
        )
        ) / count(1) * 100,
        0
        ),
        1
        ),
        '%'
        ) sevenSolveRate,
        a.complaintType
        FROM
        t_complaint_handling a
        <where>
            <if test="startTime != null and startTime != ''">
                and cast(complaintStartTime as date) &gt;= #{startTime}
            </if>
            <if test=" endTime != null and  endTime != ''">
                and cast(complaintStartTime as date) &lt;= #{endTime}
            </if>
            <if test="(productTypeCode != null and productTypeCode.size > 0) or (productCategoryCode != null and productCategoryCode.size > 0)">
                AND( 1=2
                <if test="productTypeCode != null and productTypeCode.size > 0">
                    OR a.productTypeCode IN
                    <foreach collection="productTypeCode" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="productCategoryCode != null and productCategoryCode.size > 0">
                    OR a.productCategoryCode IN
                    <foreach collection="productCategoryCode" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                )
            </if>
        </where>
        GROUP BY
        a.complaintType
    </select>
    <select id="tabValue3" resultType="java.util.Map">
        select concat(round(ifnull(sum(ifnull(TIMESTAMPDIFF(DAY,cast(complaintStartTime as date),cast(solutionSubmissionTime as date)) &lt;= 1,0)) / count(1) * 100,0),1),'%') submissionRate,
        ('全部投诉') complaintType
        from t_complaint_handling a
        left join t_region_service_store b
        on b.accountingCenterCode = a.accountingCenterCode and b.storeNumber = a.storeNumber
        <where>
            <if test="startTime != null and startTime != ''">
                and cast(complaintStartTime as date) &gt;= #{startTime}
            </if>
            <if test=" endTime != null and  endTime != ''">
                and cast(complaintStartTime as date) &lt;= #{endTime}
            </if>
            <if test="(productTypeCode != null and productTypeCode.size > 0) or (productCategoryCode != null and productCategoryCode.size > 0)">
                AND( 1=2
                <if test="productTypeCode != null and productTypeCode.size > 0">
                    OR a.productTypeCode IN
                    <foreach collection="productTypeCode" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="productCategoryCode != null and productCategoryCode.size > 0">
                    OR a.productCategoryCode IN
                    <foreach collection="productCategoryCode" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                )
            </if>
        </where>
        union all
        select concat(round(ifnull(sum(ifnull(TIMESTAMPDIFF(DAY,cast(complaintStartTime as date),cast(solutionSubmissionTime as date)) &lt;= 1,0)) / count(1) * 100,0),1),'%') submissionRate,
        a.complaintType
        from t_complaint_handling a
        left join t_region_service_store b
        on b.accountingCenterCode = a.accountingCenterCode and b.storeNumber = a.storeNumber
        <where>
            <if test="startTime != null and startTime != ''">
                and cast(complaintStartTime as date) &gt;= #{startTime}
            </if>
            <if test=" endTime != null and  endTime != ''">
                and cast(complaintStartTime as date) &lt;= #{endTime}
            </if>
            <if test="(productTypeCode != null and productTypeCode.size > 0) or (productCategoryCode != null and productCategoryCode.size > 0)">
                AND( 1=2
                <if test="productTypeCode != null and productTypeCode.size > 0">
                    OR a.productTypeCode IN
                    <foreach collection="productTypeCode" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="productCategoryCode != null and productCategoryCode.size > 0">
                    OR a.productCategoryCode IN
                    <foreach collection="productCategoryCode" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                )
            </if>
        </where>
        group by a.complaintType
    </select>
    <!--派工单信息-->
    <select id="dispatchingDetail" resultType="java.util.Map">
        select * from t_region_dispatching_detail where dispatchingOrder = #{dispatchingOrder}
    </select>
    <!--流转历史-->
    <select id="transferInformation" resultType="java.util.Map">
        select distinct transferId,associatedNumber,operationTime,operationContent,remark,relatedData
        from t_region_transfer_information
        where associatedNumber = #{associatedNumber}
        order by operationTime desc
    </select>
    <!--根据派工单查询调换部件信息-->
    <select id="replaceList" resultType="java.util.Map">
        select * from t_region_replace_part where dispatchingOrder = #{dispatchingOrder}
    </select>
    <!--根据派工单查询检修部件信息-->
    <select id="repairList" resultType="java.util.Map">
        select * from t_region_repair_part where dispatchingOrder = #{dispatchingOrder}
    </select>
    
    <!--上门服务异常监控 无需计算时间的，仅统计-->
    <select id="visitMonitoringOnlyCount" resultType="Long">
        SELECT count(rdd.dispatchingOrder) FROM t_region_dispatching_detail rdd 
        <if test="stateKind!=null and (stateKind=='guaDan' or stateKind=='jieGua')"> 
        	LEFT JOIN t_region_pending_order rpo ON rdd.dispatchingOrder = rpo.dispatchingOrder
        </if>
        <if test="stateKind!=null and (stateKind=='guaDan' or stateKind=='zuoYe')"> 
        	LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        </if>
        <if test="stateKind!=null and stateKind=='zuoYe'"> 
        	LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
    		LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
        </if>
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="visitMonitoringCommonWhere" />
        </where>
    </select>
    <!--上门服务异常监控：接单-->
    <select id="visitMonitoring4JieDan" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.dispatchingTime, rdd.receiptTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="visitMonitoringCommonWhere" />
        </where>
    </select>
    <!--上门服务异常监控：预约-->
    <select id="visitMonitoring4YuYue" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.receiptTime, rdd.appointmentOperationTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="visitMonitoringCommonWhere" />
        </where>
    </select>
    <!--上门服务异常监控：上门-->
    <select id="visitMonitoring4ShangMen" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.appointmentOperationTime, rdd.firstVisitTime)) as TimediffSecond from t_region_dispatching_detail rdd
		left join t_region_pending_order rpo on rdd.dispatchingOrder = rpo.dispatchingOrder
		<include refid="monitoringCommonLeft" />
        <where>
        	<include refid="visitMonitoringCommonWhere" />
        </where>
    </select>
    <!--上门服务异常监控：零件供应-->
    <select id="visitMonitoring4LingJian" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, od.orderStartTime, r.appropriateInvestTime)) as TimediffSecond from t_region_dispatching_detail rdd
        LEFT JOIN t_region_pending_order rpo ON rdd.dispatchingOrder = rpo.dispatchingOrder
        LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
    	LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
    	<include refid="monitoringCommonLeft" />
        <where>
        	<include refid="visitMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--上门服务异常监控：服务完成-->
    <select id="visitMonitoring4FuWuWanCheng" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.visitTime, rdd.finishTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="visitMonitoringCommonWhere" />
        </where>
    </select>
    <!--上门服务异常监控：服务提交-->
    <select id="visitMonitoring4FuWuTiJiao" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, finishTime, submissionTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="visitMonitoringCommonWhere" />
        </where>
    </select>
    
    <sql id="monitoringCommonLeft">
    	<if test="accountingAreaCode != null and accountingAreaCode != ''">
    		LEFT JOIN t_region_service_store rss ON rdd.storeNumber = rss.storeNumber AND rdd.accountingCenterCode = rss.accountingCenterCode
    	</if>
    	<if test="isComplaint != null and isComplaint == 1">
    		LEFT JOIN t_complaint_handling ch ON ch.dispatchingOrder = rdd.dispatchingOrder
        </if>
    </sql>
    
    <sql id="visitMonitoringCommonWhere">
    	(rdd.serviceType IN ('维修', '安装') or (rdd.serviceType = '鉴定' and rdd.firstServiceType IN ('安装', '维修')))
    	and rdd.systemState NOT IN ('已作废','已关闭','申请作废')
    	<!-- 查询是否是异常单 -->
    	<if test="isErr != null and isErr == 1">
    		AND (timelyEligible = 0 or punctualityEligible = 0 or averageEligible =0
            or solveEligible = 0 or repairEligible = 0 or schemeEligible = 0)
    	</if>
    	<!-- 查询不同进度的派工单 -->
    	<if test="stateKind != null">
    		<!-- 派工 -->
    		<if test="stateKind == 'paiGong'">
    			AND rdd.receiptTime is null
    		</if>
    		<!-- 接单 -->
    		<if test="stateKind == 'jieDan'"> 
    			AND rdd.receiptTime is not null and rdd.appointmentTime is null
    		</if>
    		<!-- 预约 -->
    		<if test="stateKind == 'yuYue'">
    			AND rdd.appointmentTime is not null and rdd.visitTime is null
    		</if>
    		<!-- 上门 -->
    		<if test="stateKind == 'shangMen'">
    			AND rdd.visitTime is not null and rdd.pendingState is null and rdd.finishTime is null
    		</if>
    		<!-- 挂单 -->
    		<if test="stateKind == 'guaDan'">
    			AND rpo.pendingOrderTime is not null and od.orderStartTime is null
    		</if>
    		<!-- 作业订单 -->
    		<if test="stateKind == 'zuoYe'">
    			AND od.orderStartTime is not null and r.appropriateInvestTime is null
    		</if>
    		<!-- 零件供应 -->
    		<if test="stateKind == 'lingJian'">
    			AND r.appropriateInvestTime is not null and rpo.finishOrderTime is null
    		</if>
    		<!-- 解挂-->
    		<if test="stateKind == 'jieGua'">
    			AND rdd.pendingState = '解挂' and rdd.finishTime is null
    		</if>
    		<!-- 服务完成-->
    		<if test="stateKind == 'fuWuWanCheng'">
    			AND rdd.finishTime is not null and rdd.submissionTime is null
    		</if>
    		<!-- 服务提交 -->
    		<if test="stateKind == 'fuWuTiJiao'">
    			AND rdd.submissionTime is not null
    		</if>
    	</if>
        <if test="startTime != null and startTime != ''">
		    AND rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
        	AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="productCategoryCode != null and productCategoryCode != '' ">
            AND rdd.productCategoryCode = #{productCategoryCode}
        </if>
        <if test="productCategoryCodeList != null and productCategoryCodeList != '' ">
            AND rdd.productCategoryCode IN 
            <foreach collection="productCategoryCodeList" item="productCategoryCode" open="(" separator="," close=")">
        		#{productCategoryCode}
        	</foreach>
        </if>
        <if test="productTypeCode != null and productTypeCode != '' ">
            AND rdd.productTypeCode = #{productTypeCode}
        </if>
        <if test="productTypeCodeList != null and productTypeCodeList != '' ">
            AND rdd.productTypeCode IN 
            <foreach collection="productTypeCodeList" item="productTypeCode" open="(" separator="," close=")">
        		#{productTypeCode}
        	</foreach>
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND rdd.storeNumber = #{storeNumber}
        </if>
        <if test="serviceType != null">
        	AND rdd.serviceType = #{serviceType}
        </if>
        <if test="serviceTypeIn != null">
        	AND rdd.serviceType IN 
        	<foreach collection="serviceTypeIn" item="serviceType" open="(" separator="," close=")">
        		#{serviceType}
        	</foreach>
        </if>
        <if test="serviceWay != null">
        	AND rdd.serviceWay = #{serviceWay}
        </if>
        <if test="engineerId != null and engineerId != ''">
        	AND rdd.engineerId = #{engineerId}
        </if>
        <!-- 大区 ，条件来自monitoringCommonLeft代码块-->
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <!-- 投诉单不为空 ，条件来自monitoringCommonLeft代码块-->
        <if test="isComplaint != null and isComplaint == 1">
            AND ch.complaintNumber is not null
        </if>
    </sql>
    
    <!--送修服务异常监控：接单-->
    <select id="giveMonitoring4JieDan" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.dispatchingTime, rdd.receiptTime)) as TimediffSecond from t_region_dispatching_detail rdd
        LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="giveMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--送修服务异常监控：作业订单-->
    <select id="giveMonitoring4ZuoYe" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.receiptTime, od.orderStartTime)) as TimediffSecond from t_region_dispatching_detail rdd
        LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
    	LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
    	<include refid="monitoringCommonLeft" />
        <where>
        	<include refid="giveMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--送修服务异常监控：零件供应-->
    <select id="giveMonitoring4LingJian" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, od.orderStartTime, r.appropriateInvestTime)) as TimediffSecond from t_region_dispatching_detail rdd
        LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
    	LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
    	<include refid="monitoringCommonLeft" />
        <where>
        	<include refid="giveMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--送修服务异常监控：还件-->
    <select id="giveMonitoring4HuanJian" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, r.appropriateInvestTime, rdd.shopReturnTime)) as TimediffSecond from t_region_dispatching_detail rdd
        LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
    	LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
    	<include refid="monitoringCommonLeft" />
        <where>
        	<include refid="giveMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--送修服务异常监控：服务完成-->
    <select id="giveMonitoring4FuWuWanCheng" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.shopReturnTime, rdd.finishTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="giveMonitoringCommonWhere" />
        </where>
    </select>
    <!--送修服务异常监控：服务提交-->
    <select id="giveMonitoring4FuWuTiJiao" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, finishTime, submissionTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="giveMonitoringCommonWhere" />
        </where>
    </select>
    
    <sql id="giveMonitoringCommonWhere">
    	<!-- 查询是否是异常单 -->
    	<if test="isErr != null and isErr == 1">
    		AND (timelyEligible = 0 or punctualityEligible = 0 or averageEligible =0
            or solveEligible = 0 or repairEligible = 0 or schemeEligible = 0)
    	</if>
    	<!-- 查询不同进度的派工单 -->
    	<if test="stateKind != null">
    		<!-- 派工 -->
    		<if test="stateKind == 'paiGong'">
    			AND rdd.receiptTime is null
    		</if>
    		<!-- 接单 -->
    		<if test="stateKind == 'jieDan'">
    			AND rdd.receiptTime is not null and od.orderStartTime is null
    		</if>
    		<!-- 作业订单 -->
    		<if test="stateKind == 'zuoYe'">
				AND od.orderStartTime is not null and r.appropriateInvestTime is null
			</if>
    		<!-- 零件供应 -->
    		<if test="stateKind == 'lingJian'">
				AND r.appropriateInvestTime is not null and rdd.shopReturnTime is null
			</if>
    		<!-- 还件-->
    		<if test="stateKind == 'huanJian'">
    			AND rdd.shopReturnTime is not null and rdd.finishTime is null and rdd.submissionTime is null
    		</if>
    		<!-- 服务完成-->
    		<if test="stateKind == 'fuWuWanCheng'">
    			AND rdd.finishTime is not null and rdd.submissionTime is null
    		</if>
    		<!-- 服务提交 -->
    		<if test="stateKind == 'fuWuTiJiao'">
    			AND rdd.submissionTime is not null
    		</if>
    	</if>
    	<if test="startTime != null and startTime != ''">
        	AND rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
        	AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="productCategoryCode != null and productCategoryCode != '' ">
            AND rdd.productCategoryCode = #{productCategoryCode}
        </if>
        <if test="productCategoryCodeList != null and productCategoryCodeList != '' ">
            AND rdd.productCategoryCode IN 
            <foreach collection="productCategoryCodeList" item="productCategoryCode" open="(" separator="," close=")">
        		#{productCategoryCode}
        	</foreach>
        </if>
        <if test="productTypeCode != null and productTypeCode != '' ">
            AND rdd.productTypeCode = #{productTypeCode}
        </if>
        <if test="productTypeCodeList != null and productTypeCodeList != '' ">
            AND rdd.productTypeCode IN 
            <foreach collection="productTypeCodeList" item="productTypeCode" open="(" separator="," close=")">
        		#{productTypeCode}
        	</foreach>
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND rdd.storeNumber = #{storeNumber}
        </if>
        <if test="serviceType != null">
        	AND rdd.serviceType = #{serviceType}
        </if>
        <if test="serviceTypeIn != null">
        	AND rdd.serviceType IN 
        	<foreach collection="serviceTypeIn" item="serviceType" open="(" separator="," close=")">
        		#{serviceType}
        	</foreach>
        </if>
        <if test="serviceWay != null">
        	AND rdd.serviceWay = #{serviceWay}
        </if>
        <if test="engineerId != null and engineerId != ''">
        	AND rdd.engineerId = #{engineerId}
        </if>
        <!-- 大区 ，条件来自monitoringCommonLeft代码块-->
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <!-- 投诉单不为空 ，条件来自monitoringCommonLeft代码块-->
        <if test="isComplaint != null and isComplaint == 1">
            AND ch.complaintNumber is not null
        </if>
    </sql>
    
    <!--寄修服务异常监控：寄修到件-->
    <select id="sendMonitoring4JiXiu" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.dispatchingTime, rdd.shopDeliveryTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="sendMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--寄修服务异常监控：接单-->
    <select id="sendMonitoring4JieDan" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.shopDeliveryTime, rdd.receiptTime)) as TimediffSecond from t_region_dispatching_detail rdd
        LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="sendMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--寄修服务异常监控：作业订单-->
    <select id="sendMonitoring4ZuoYe" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.receiptTime, od.orderStartTime)) as TimediffSecond from t_region_dispatching_detail rdd
        LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
    	LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
    	<include refid="monitoringCommonLeft" />
        <where>
        	<include refid="sendMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--寄修服务异常监控：零件供应-->
    <select id="sendMonitoring4LingJian" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, od.orderStartTime, r.appropriateInvestTime)) as TimediffSecond from t_region_dispatching_detail rdd
        LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
    	LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
    	<include refid="monitoringCommonLeft" />
        <where>
        	<include refid="sendMonitoringCommonWhere" />
        </where>
    </select>
    <!--寄修服务异常监控：还件-->
    <select id="sendMonitoring4HuanJian" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, r.appropriateInvestTime, rdd.shopDeliveryTime)) as TimediffSecond from t_region_dispatching_detail rdd
        LEFT JOIN t_order_detail od ON rdd.dispatchingOrder = od.dispatchingOrder
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
    	LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
    	<include refid="monitoringCommonLeft" />
        <where>
        	<include refid="sendMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--寄修服务异常监控：还件揽收-->
    <select id="sendMonitoring4HuanJianLanShou" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.shopDeliveryTime, rdd.returnCollectionTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="sendMonitoringCommonWhere" />
        </where>
    </select>
    
    <!--寄修服务异常监控：服务完成-->
    <select id="sendMonitoring4FuWuWanCheng" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, rdd.returnCollectionTime, rdd.finishTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="sendMonitoringCommonWhere" />
        </where>
    </select>
    <!--寄修服务异常监控：服务提交-->
    <select id="sendMonitoring4FuWuTiJiao" resultType="java.util.Map">
        select count(rdd.dispatchingOrder) as count , SUM(TIMESTAMPDIFF(SECOND, finishTime, submissionTime)) as TimediffSecond from t_region_dispatching_detail rdd
        <include refid="monitoringCommonLeft" />
        <where>
        	<include refid="sendMonitoringCommonWhere" />
        </where>
    </select>
    
    <sql id="sendMonitoringCommonWhere">
    	<!-- 查询是否是异常单 -->
    	<if test="isErr != null and isErr == 1">
    		AND (timelyEligible = 0 or punctualityEligible = 0 or averageEligible =0
            or solveEligible = 0 or repairEligible = 0 or schemeEligible = 0)
    	</if>
    	<!-- 查询不同进度的派工单 -->
    	<if test="stateKind != null">
    		<!-- 派工 -->
    		<if test="stateKind == 'paiGong'">
    			AND rdd.receiptTime is null
    		</if>
    		<!-- 寄修 -->
    		<if test="stateKind == 'jiXiu'">
    			AND rdd.shopDeliveryTime is not null and rdd.receiptTime is null
    		</if>
    		<!-- 接单 -->
    		<if test="stateKind == 'jieDan'">
    			AND rdd.receiptTime is not null and od.orderStartTime is null
    		</if>
    		<!-- 作业订单 -->
    		<if test="stateKind == 'zuoYe'">
    			AND od.orderStartTime is not null and r.appropriateInvestTime is null
    		</if>
    		<!-- 零件供应 -->
    		<if test="stateKind == 'lingJian'">
    			AND r.appropriateInvestTime is not null and rdd.shopDeliveryTime is null
    		</if>
    		<!-- 还件-->
    		<if test="stateKind == 'huanJian'">
    			AND rdd.shopDeliveryTime is not null and rdd.returnCollectionTime is null
    		</if>
    		<!-- 还件揽收-->
    		<if test="stateKind == 'huanJianLanShou'">
    			AND rdd.returnCollectionTime is not null and rdd.finishTime is null
    		</if>
    		<!-- 服务完成-->
    		<if test="stateKind == 'fuWuWanCheng'">
    			AND rdd.finishTime is not null and rdd.submissionTime is null
    		</if>
    		<!-- 服务提交 -->
    		<if test="stateKind == 'fuWuTiJiao'">
    			AND rdd.submissionTime is not null
    		</if>
    	</if>
  		<if test="startTime != null and startTime != ''">
        	AND rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
        	AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="productCategoryCode != null and productCategoryCode != '' ">
            AND rdd.productCategoryCode = #{productCategoryCode}
        </if>
        <if test="productCategoryCodeList != null and productCategoryCodeList != '' ">
            AND rdd.productCategoryCode IN 
            <foreach collection="productCategoryCodeList" item="productCategoryCode" open="(" separator="," close=")">
        		#{productCategoryCode}
        	</foreach>
        </if>
        <if test="productTypeCode != null and productTypeCode != '' ">
            AND rdd.productTypeCode = #{productTypeCode}
        </if>
        <if test="productTypeCodeList != null and productTypeCodeList != '' ">
            AND rdd.productTypeCode IN 
            <foreach collection="productTypeCodeList" item="productTypeCode" open="(" separator="," close=")">
        		#{productTypeCode}
        	</foreach>
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND rdd.storeNumber = #{storeNumber}
        </if>
        <if test="serviceType != null">
        	AND rdd.serviceType = #{serviceType}
        </if>
        <if test="serviceTypeIn != null">
        	AND rdd.serviceType IN 
        	<foreach collection="serviceTypeIn" item="serviceType" open="(" separator="," close=")">
        		#{serviceType}
        	</foreach>
        </if>
        <if test="serviceWay != null">
        	AND rdd.serviceWay = #{serviceWay}
        </if>
        <if test="engineerId != null and engineerId != ''">
        	AND rdd.engineerId = #{engineerId}
        </if>
        <!-- 大区 ，条件来自monitoringCommonLeft代码块-->
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <!-- 投诉单不为空 ，条件来自monitoringCommonLeft代码块-->
        <if test="isComplaint != null and isComplaint == 1">
            AND ch.complaintNumber is not null
        </if>
    </sql>
    
    
    <!--单个改约率-->
    <select id="reschedule" resultType="java.util.Map">
        SELECT t.*,
               CAST(0 + CAST(ROUND(IFNULL(t.eligible / t.total, 0) * 100, 1) AS CHAR) AS CHAR) AS rate
        FROM (SELECT
                     SUM(IF(rdd.rescheduleFrequency > 0, 1, 0)) AS eligible,COUNT(1) AS total
              FROM t_region_dispatching_detail rdd
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
             )t
    </select>
    <!--按日聚合改约率-->
    <select id="dateReschedule" resultType="java.util.Map">
        SELECT t.*,
        CAST(0 + CAST(ROUND(IFNULL(t.eligible / t.total, 0) * 100, 1) AS CHAR) AS CHAR) AS rate
        FROM (SELECT LEFT(rdd.dispatchingTime,10) AS dispatchingTime,
        SUM(IF(rdd.rescheduleFrequency > 0, 1, 0)) AS eligible,COUNT(1) AS total
        FROM t_region_dispatching_detail rdd
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY LEFT(rdd.dispatchingTime,10)
        )t
    </select>
    <select id="lists" resultType="java.util.Map">
        select rdd.dispatchingTime,rdd.startTimeOfAssessment,rdd.appointmentOperationTime,rss.openingTime,rss.closingTime,
        rdd.systemState,rdd.serviceType,rdd.firstAppointmentTimeSection,rdd.appointmentTimeSection,rdd.firstVisitTime,rdd.visitTime,
        rdd.exchangeMaintain,rdd.customerDeliveryTime,rdd.finishTime,
        ch.complaintStartTime,ch.complaintEndTime,ch.exceptionDay
        FROM t_region_dispatching_detail rdd
        LEFT JOIN t_region_service_store rss ON rss.storeNumber = rdd.storeNumber
            AND rss.accountingCenterCode = rdd.accountingCenterCode
        LEFT JOIN t_complaint_handling ch ON ch.dispatchingOrder = rdd.dispatchingOrder
            AND ch.complaintType = '服务投诉'
        where rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN (
        '安装',
        '维修',
        '鉴定',
        '非上门维修'
        )
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
    </select>
    <select id="twoUp" resultType="java.util.Map">
        SELECT t.dispatchingOrder,t.two FROM(SELECT rpo2.dispatchingOrder,
               SUM(IF(LEFT(rpo2.pendingOrderTime,10) &lt;&gt; LEFT(IFNULL(rpo2.finishOrderTime,DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s')),10),1,0))two
        FROM t_region_pending_order rpo2
        LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = rpo2.dispatchingOrder
        left join t_region_service_store rss ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        where rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN (
        '安装',
        '维修',
        '鉴定'
        )
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY rpo2.dispatchingOrder)t
        WHERE t.two>0
    </select>
    <select id="twoUp2" resultType="java.util.Map">
        SELECT rsd.dispatchingOrder,COUNT(1)AS two FROM t_region_second_door rsd
        LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = rsd.dispatchingOrder
        left join t_region_service_store rss ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType ='非上门维修'
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productTypeCode != null and productTypeCode.size>0 ">
            AND  rdd.productTypeCode IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
        </if>
        GROUP BY
        rsd.dispatchingOrder
    </select>
    <select id="gdLongTime" resultType="java.util.Map">
        SELECT rdd.dispatchingOrder,SUM(TIMESTAMPDIFF(SECOND,rpo3.pendingOrderTime,rpo3.finishOrderTime))AS longTime
        FROM t_region_dispatching_detail rdd
        LEFT JOIN t_region_pending_order rpo3 ON rpo3.dispatchingOrder=rdd.dispatchingOrder
        left join t_region_service_store rss ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType ='非上门维修'
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY rdd.dispatchingOrder
    </select>
    <select id="complaintLists" resultType="java.util.Map">
        SELECT rdd.dispatchingTime,ch.complaintStartTime,ch.complaintEndTime,ch.exceptionDay
        FROM
            t_region_dispatching_detail rdd
                LEFT JOIN t_complaint_handling ch ON ch.dispatchingOrder = rdd.dispatchingOrder
                LEFT JOIN t_region_service_store rss ON rss.storeNumber = rdd.storeNumber
                AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE ch.complaintType = '服务投诉'
        AND rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType ='非上门维修'
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  ch.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
    </select>

    <select id="allListCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM(
        SELECT DISTINCT
        rdd.dispatchingOrder,rdd.storeNumber,rdd.storeName,rdd.engineerId,rdd.engineerName,rdd.dispatchingTime,
        rdd.appointmentOperationTime,rdd.TATFinishTime,rdd.accountingAreaCode,rdd.accountingArea,rdd.serviceType,
        rdd.systemState,rdd.provinces,rdd.city,rdd.timelyEligible,rdd.punctualityEligible,rdd.averageEligible,
        rdd.solveEligible,rdd.repairEligible,rdd.schemeEligible,rdd.receiptTime,rdd.appointmentTime,rdd.pendingState,
        rdd.firstVisitTime,rdd.finishTime,rdd.submissionTime,rdd.shopReturnTime,rdd.shopDeliveryTime,rdd.returnCollectionTime,
        rdd.firstServiceType,
        rdd.serviceWay,rdd.dispatchingSource,rdd.updateTime,rdd.pendingTime,rdd.firstAppointmentTimeSection,
        rdd.serviceNumber,rdd.customerDeliveryTime,rdd.visitTime,CONCAT(rdd.provinces,rdd.city) AS region,
        TIMESTAMPDIFF(HOUR,rdd.dispatchingTime,IFNULL(rdd.TATFinishTime,NOW())) AS transferTime

        <if test="serviceType == '上门'">
            ,CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN '服务提交'
            WHEN rdd.finishTime IS NOT NULL
            THEN '服务完成'
            WHEN rdd.pendingState = '解挂'
            THEN '解挂'
            <if test="from == 'all' and isErr == 1 and nodeName != '服务提交'">
                WHEN yt.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN yt.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            <if test="!(from == 'all' and isErr == 1 and nodeName != '服务提交')">
                WHEN oder.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN oder.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            WHEN rdd.pendingState = '挂单'
            THEN '挂单'
            WHEN rdd.firstVisitTime IS NOT NULL
            THEN '上门'
            WHEN rdd.appointmentOperationTime IS NOT NULL
            THEN '预约'
            WHEN rdd.receiptTime IS NOT NULL
            THEN '接单'
            ELSE '派工'
            END AS title
        </if>
        <if test="serviceType == '送修'">
            ,CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN '服务提交'
            WHEN rdd.finishTime IS NOT NULL OR rdd.customerDeliveryTime IS NOT NULL
            THEN '服务完成'
            WHEN rdd.shopReturnTime IS NOT NULL
            THEN '还件'
            <if test="from == 'all' and isErr == 1 and nodeName != '服务提交'">
                WHEN yt.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN yt.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            <if test="!(from == 'all' and isErr == 1 and nodeName != '服务提交')">
                WHEN oder.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN oder.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            WHEN rdd.serviceNumber IS NOT NULL
            THEN '非上门服务单'
            ELSE '派工'
            END AS title
        </if>
        <if test="serviceType == '寄修'">
            ,CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN '服务提交'
            WHEN rdd.finishTime IS NOT NULL OR rdd.customerDeliveryTime IS NOT NULL
            THEN '服务完成'
            WHEN rdd.returnCollectionTime IS NOT NULL
            THEN '还件揽收'
            WHEN rdd.shopReturnTime IS NOT NULL
            THEN '还件'
            <if test="from == 'all' and isErr == 1 and nodeName != '服务提交'">
                WHEN yt.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN yt.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            <if test="!(from == 'all' and isErr == 1 and nodeName != '服务提交')">
                WHEN oder.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN oder.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            WHEN rdd.serviceNumber IS NOT NULL
            THEN '非上门服务单'
            WHEN rdd.shopDeliveryTime IS NOT NULL
            THEN '寄修到件'
            ELSE '派工'
            END AS title
        </if>
        FROM t_region_dispatching_detail rdd
        <if test="from != 'averageEligible'">
            force index(in_dt,in_or)
        </if>
        <if test="from == 'averageEligible'">
            force index(in_wc,in_or)
        </if>
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber AND rss.accountingCenterCode = rdd.accountingCenterCode
        LEFT JOIN (
        SELECT od.dispatchingOrder,od.orderStartTime,MAX(r.appropriateInvestTime)AS appropriateInvestTime
        FROM t_order_detail od
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
        LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
        GROUP BY od.dispatchingOrder,od.orderStartTime
        )oder ON oder.dispatchingOrder = rdd.dispatchingOrder
        <if test="from == 'solveEligible' or from == 'schemeEligible' or isComplaint == 1">
            LEFT JOIN (SELECT DISTINCT
            ch.dispatchingOrder FROM t_complaint_handling ch) dch
            ON dch.dispatchingOrder = rdd.dispatchingOrder
        </if>
        <if test="serviceType == '上门' and from == 'all' and isErr == 1 and  nodeName != '服务提交'">
            LEFT JOIN (SELECT rdd1.dispatchingOrder ,oder1.appropriateInvestTime,oder1.orderStartTime,
            CASE

            WHEN rdd1.submissionTime IS NOT NULL THEN
            0
            WHEN rdd1.finishTime IS NOT NULL THEN
            TIMESTAMPDIFF(
            DAY,
            rdd1.dispatchingTime,
            rdd1.TATFinishTime) &gt; 4
            WHEN rdd1.pendingState = '解挂' THEN
            0
            WHEN oder1.appropriateInvestTime IS NOT NULL THEN
            oder1.ljgy
            WHEN oder1.orderStartTime IS NOT NULL THEN
            oder1.zydd
            WHEN rdd1.pendingState = '挂单' THEN
            TIMESTAMPDIFF(
            DAY,
            SUBSTR( rdd1.visitTime, 1, 10 ),
            DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
            WHEN rdd1.firstVisitTime IS NOT NULL THEN
            TIMESTAMPDIFF(
            DAY,
            SUBSTR( rdd1.visitTime, 1, 10 ),
            DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
            WHEN rdd1.appointmentOperationTime IS NOT NULL THEN
            DATE_FORMAT( NOW(), '%Y-%m-%d %H:%i:%S' ) &gt;
            IF
            (
            CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ) ) &lt; LEFT ( rdd1.appointmentTimeSection, 16 ),
            DATE_ADD( CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ), ':00' ), INTERVAL 1 DAY ),
            CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ), ':00' ))
            WHEN rdd1.receiptTime IS NOT NULL THEN
            TIMESTAMPDIFF( MINUTE, rdd1.dispatchingTime, NOW() ) &gt; 30 ELSE 0
            END AS outTimeCount
            FROM
            t_region_dispatching_detail rdd1 FORCE INDEX ( in_dt, in_or )
            LEFT JOIN (
            SELECT
            tp1.dispatchingOrder,
            MAX( tp1.orderStartTime ) AS orderStartTime,
            IF
            (
            SUM( tp1.qs ) &gt; 0,
            NULL,
            MAX( tp1.appropriateInvestTime )) AS appropriateInvestTime,
            SUM( tp1.jnl )&gt; 1 AS zydd,
            SUM( tp1.nds2 )&gt; 1
            OR COUNT( tp1.documentNo ) &gt; 1 AS ljgy
            FROM
            (
            SELECT
            od1.dispatchingOrder,
            od1.documentNumber,
            od1.orderStartTime,
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', 1, 0 ) AS qs,
            r1.appropriateInvestTime,
            ( po1.state != '2' AND po1.isShipment = '0' ) AS jnl,
            ((
            r1.appropriateInvestTime IS NOT NULL
            OR r1.goodTime IS NOT NULL
            )
            AND TimeStampDiff(
            DAY,
            r1.deliveryTime,
            IF
            (
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', '3022-12-12 00:00:00', r1.appropriateInvestTime )&gt;
            IF
            ( r1.goodTime IS NULL OR r1.goodTime = '', '3022-12-12 00:00:00', r1.goodTime ),
            substring( r1.goodTime, 1, 10 ),
            substring( r1.appropriateInvestTime, 1, 10 ))) &gt; 2
            ) AS nds2,
            msuo1.documentNo
            FROM
            t_order_detail od1
            LEFT JOIN t_part_order po1 ON po1.documentNumber = od1.documentNumber
            LEFT JOIN t_receipt_detail rd1 ON rd1.associatedOrderNumber = od1.documentNumber
            LEFT JOIN t_receipt r1 ON r1.documentNumber = rd1.documentNumber
            LEFT JOIN t_miss_stock_up_order msuo1 ON msuo1.associatedOrderNumber = od1.documentNumber
            WHERE
            od1.dispatchingOrder IS NOT NULL
            ) tp1
            GROUP BY
            tp1.dispatchingOrder
            ) oder1 ON oder1.dispatchingOrder = rdd1.dispatchingOrder

            <where>
                <if test="endTime != null and endTime != '' ">
                    AND rdd1.dispatchingTime &lt;= #{endTime}
                </if>
                <if test="startTime != null and startTime != '' ">
                    AND rdd1.dispatchingTime &gt;= #{startTime}
                </if>
            </where>
            )yt ON yt.dispatchingOrder = rdd.dispatchingOrder
        </if>
        <if test="serviceType == '送修' and from == 'all' and isErr == 1 and  nodeName != '服务提交'">
            LEFT JOIN (SELECT rdd1.dispatchingOrder ,oder1.appropriateInvestTime,oder1.orderStartTime,CASE
            WHEN rdd1.submissionTime IS NOT NULL
            THEN 0
            WHEN rdd1.finishTime IS NOT NULL
            THEN TIMESTAMPDIFF(
            DAY,
            rdd1.dispatchingTime,
            rdd1.TATFinishTime) &gt; 4
            WHEN rdd1.shopReturnTime IS NOT NULL
            THEN 0
            WHEN oder1.appropriateInvestTime IS NOT NULL
            THEN oder1.ljgy
            WHEN oder1.orderStartTime IS NOT NULL
            THEN oder1.zydd
            WHEN rdd1.serviceNumber IS NOT NULL
            THEN 0
            ELSE 0
            END
            AS outTimeCount
            FROM
            t_region_dispatching_detail rdd1 FORCE INDEX ( in_dt, in_or )
            LEFT JOIN (
            SELECT
            tp1.dispatchingOrder,
            MAX( tp1.orderStartTime ) AS orderStartTime,
            IF
            (
            SUM( tp1.qs ) &gt; 0,
            NULL,
            MAX( tp1.appropriateInvestTime )) AS appropriateInvestTime,
            SUM( tp1.jnl )&gt; 1 AS zydd,
            SUM( tp1.nds2 )&gt; 1
            OR COUNT( tp1.documentNo ) &gt; 1 AS ljgy
            FROM
            (
            SELECT
            od1.dispatchingOrder,
            od1.documentNumber,
            od1.orderStartTime,
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', 1, 0 ) AS qs,
            r1.appropriateInvestTime,
            ( po1.state != '2' AND po1.isShipment = '0' ) AS jnl,
            ((
            r1.appropriateInvestTime IS NOT NULL
            OR r1.goodTime IS NOT NULL
            )
            AND TimeStampDiff(
            DAY,
            r1.deliveryTime,
            IF
            (
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', '3022-12-12 00:00:00', r1.appropriateInvestTime )&gt;
            IF
            ( r1.goodTime IS NULL OR r1.goodTime = '', '3022-12-12 00:00:00', r1.goodTime ),
            substring( r1.goodTime, 1, 10 ),
            substring( r1.appropriateInvestTime, 1, 10 ))) &gt; 2
            ) AS nds2,
            msuo1.documentNo
            FROM
            t_order_detail od1
            LEFT JOIN t_part_order po1 ON po1.documentNumber = od1.documentNumber
            LEFT JOIN t_receipt_detail rd1 ON rd1.associatedOrderNumber = od1.documentNumber
            LEFT JOIN t_receipt r1 ON r1.documentNumber = rd1.documentNumber
            LEFT JOIN t_miss_stock_up_order msuo1 ON msuo1.associatedOrderNumber = od1.documentNumber
            WHERE
            od1.dispatchingOrder IS NOT NULL
            ) tp1
            GROUP BY
            tp1.dispatchingOrder
            ) oder1 ON oder1.dispatchingOrder = rdd1.dispatchingOrder
            <where>
                <if test="endTime != null and endTime != '' ">
                    AND rdd1.dispatchingTime &lt;= #{endTime}
                </if>
                <if test="startTime != null and startTime != '' ">
                    AND rdd1.dispatchingTime &gt;= #{startTime}
                </if>
            </where>
            )yt ON yt.dispatchingOrder = rdd.dispatchingOrder
        </if>
        <if test="serviceType == '寄修' and from == 'all' and isErr == 1 and  nodeName != '服务提交'">
            LEFT JOIN (SELECT
            rdd1.dispatchingOrder,oder1.appropriateInvestTime,oder1.orderStartTime,
            CASE

            WHEN rdd1.submissionTime IS NOT NULL THEN
            0
            WHEN rdd1.finishTime IS NOT NULL OR rdd1.customerDeliveryTime IS NOT NULL THEN
            TIMESTAMPDIFF(
            DAY,
            rdd1.dispatchingTime,
            rdd1.TATFinishTime) &gt; 4
            WHEN rdd1.pendingState = '解挂' THEN
            0
            WHEN oder1.appropriateInvestTime IS NOT NULL THEN
            oder1.ljgy
            WHEN oder1.orderStartTime IS NOT NULL THEN
            oder1.zydd
            WHEN rdd1.pendingState = '挂单' THEN
            TIMESTAMPDIFF(
            DAY,
            SUBSTR( rdd1.visitTime, 1, 10 ),
            DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
            WHEN rdd1.firstVisitTime IS NOT NULL THEN
            TIMESTAMPDIFF(
            DAY,
            SUBSTR( rdd1.visitTime, 1, 10 ),
            DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
            WHEN rdd1.appointmentOperationTime IS NOT NULL THEN
            DATE_FORMAT( NOW(), '%Y-%m-%d %H:%i:%S' ) &gt;
            IF
            (
            CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ) ) &lt; LEFT ( rdd1.appointmentTimeSection, 16 ),
            DATE_ADD( CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ), ':00' ), INTERVAL 1 DAY ),
            CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ), ':00' ))
            WHEN rdd1.receiptTime IS NOT NULL THEN
            TIMESTAMPDIFF( MINUTE, rdd1.dispatchingTime, NOW() ) &gt; 30 ELSE 0
            END AS outTimeCount
            FROM
            t_region_dispatching_detail rdd1 FORCE INDEX ( in_dt, in_or )
            LEFT JOIN (
            SELECT
            tp1.dispatchingOrder,
            MAX( tp1.orderStartTime ) AS orderStartTime,
            IF
            (
            SUM( tp1.qs ) &gt; 0,
            NULL,
            MAX( tp1.appropriateInvestTime )) AS appropriateInvestTime,
            SUM( tp1.jnl )&gt; 1 AS zydd,
            SUM( tp1.nds2 )&gt; 1
            OR COUNT( tp1.documentNo ) &gt; 1 AS ljgy
            FROM
            (
            SELECT
            od1.dispatchingOrder,
            od1.documentNumber,
            od1.orderStartTime,
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', 1, 0 ) AS qs,
            r1.appropriateInvestTime,
            ( po1.state != '2' AND po1.isShipment = '0' ) AS jnl,
            ((
            r1.appropriateInvestTime IS NOT NULL
            OR r1.goodTime IS NOT NULL
            )
            AND TimeStampDiff(
            DAY,
            r1.deliveryTime,
            IF
            (
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', '3022-12-12 00:00:00', r1.appropriateInvestTime )&gt;
            IF
            ( r1.goodTime IS NULL OR r1.goodTime = '', '3022-12-12 00:00:00', r1.goodTime ),
            substring( r1.goodTime, 1, 10 ),
            substring( r1.appropriateInvestTime, 1, 10 ))) &gt; 2
            ) AS nds2,
            msuo1.documentNo
            FROM
            t_order_detail od1
            LEFT JOIN t_part_order po1 ON po1.documentNumber = od1.documentNumber
            LEFT JOIN t_receipt_detail rd1 ON rd1.associatedOrderNumber = od1.documentNumber
            LEFT JOIN t_receipt r1 ON r1.documentNumber = rd1.documentNumber
            LEFT JOIN t_miss_stock_up_order msuo1 ON msuo1.associatedOrderNumber = od1.documentNumber
            WHERE
            od1.dispatchingOrder IS NOT NULL
            ) tp1
            GROUP BY
            tp1.dispatchingOrder
            ) oder1 ON oder1.dispatchingOrder = rdd1.dispatchingOrder
            <where>
                <if test="endTime != null and endTime != '' ">
                    AND rdd1.dispatchingTime &lt;= #{endTime}
                </if>
                <if test="startTime != null and startTime != '' ">
                    AND rdd1.dispatchingTime &gt;= #{startTime}
                </if>
            </where>
            )yt ON yt.dispatchingOrder = rdd.dispatchingOrder
        </if>

        WHERE rdd.serviceType IN (
        '安装','维修','鉴定','非上门维修'
        )
        <if test="!(from == 'all'  and (nodeName == null or nodeName == ''))">
            AND rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        </if>
        <if test="WHERE != null and WHERE != '' ">
            AND ${WHERE}
        </if>
        <if test="from != 'averageEligible'">
            <if test="endTime != null and endTime != '' ">
                AND rdd.dispatchingTime &lt;= #{endTime}
            </if>
            <if test="startTime != null and startTime != '' ">
                AND rdd.dispatchingTime &gt;= #{startTime}
            </if>
        </if>
        <if test="from == 'averageEligible'">
            <if test="endTime != null and endTime != '' ">
                AND rdd.TATFinishTime &lt;= #{endTime}
            </if>
            <if test="startTime != null and startTime != '' ">
                AND rdd.TATFinishTime &gt;= #{startTime}
            </if>
        </if>
        <if test="from == 'solveEligible' or from == 'schemeEligible' or isComplaint == 1">
            AND dch.dispatchingOrder IS NOT NULL
        </if>
        <if test="from == 'all' and isErr == 1 and nodeName == '服务提交'">
            and(
            (rdd.finishTime IS NOT NULL and  rdd.submissionTime IS NULL
            and TIMESTAMPDIFF( DAY,SUBSTRING(rdd.dispatchingTime,1,10) , DATE_FORMAT(NOW(), '%Y-%m-%d') ) &gt; 80)
            )
        </if>
        <if test="from == 'all' and isErr == 1 and  nodeName != '服务提交'">
            AND yt.outTimeCount = 1
        </if>

        <if test="from != 'all' and from != null and isErr == 1">
            AND ${from} = 0
        </if>
        <if test="from == 'averageEligible' or from == 'solveEligible' or from == 'repairEligible' or from == 'schemeEligible'">
            AND rdd.${from} IS NOT NULL
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="engineerId != null and engineerId != '' ">
            AND rdd.engineerId = #{engineerId}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd. productCategoryCode IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd. productTypeCode IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd. productCategoryCode IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd. productTypeCode IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        )t
        <where>
            <if test="QUERY != null and QUERY != '' ">
             ${QUERY}
            </if>
            <if test="isErr == 1 and nodeName != null and nodeName == '服务提交' ">
                <if test="serviceType == '上门'">
                    AND t.submissionTime IS NULL AND t.finishTime IS NOT NULL
                </if>
                <if test="serviceType == '送修'">
                    AND t.submissionTime IS NULL AND (t.finishTime IS NOT NULL OR t.customerDeliveryTime IS NOT NULL)
                </if>
                <if test="serviceType == '寄修'">
                    AND t.submissionTime IS NULL AND (t.finishTime IS NOT NULL OR t.customerDeliveryTime IS NOT NULL)
                </if>
            </if>
            <if test="isErr != 1 and nodeName != null and nodeName != '' ">
                AND title = #{nodeName}
            </if>
            <if test="isErr == 1 and nodeName != null and nodeName != '服务提交' and nodeName != '' ">
                AND title = #{nodeName}
            </if>
        </where>
    </select>
    <select id="allList" resultType="java.util.Map">
        SELECT t.*
        FROM(
        SELECT DISTINCT
        rdd.dispatchingOrder,rdd.storeNumber,rdd.storeName,rdd.engineerId,rdd.engineerName,rdd.dispatchingTime,
        rdd.appointmentOperationTime,rdd.TATFinishTime,rdd.accountingAreaCode,rdd.accountingArea,rdd.serviceType,
        rdd.systemState,rdd.provinces,rdd.city,rdd.timelyEligible,rdd.punctualityEligible,rdd.averageEligible,
        rdd.solveEligible,rdd.repairEligible,rdd.schemeEligible,rdd.receiptTime,rdd.appointmentTime,rdd.pendingState,
        rdd.firstVisitTime,rdd.finishTime,rdd.submissionTime,rdd.shopReturnTime,rdd.shopDeliveryTime,rdd.returnCollectionTime,
        rdd.firstServiceType,
        rdd.serviceWay,rdd.dispatchingSource,rdd.updateTime,rdd.pendingTime,rdd.firstAppointmentTimeSection,
        rdd.serviceNumber,rdd.customerDeliveryTime,rdd.visitTime,CONCAT(rdd.provinces,rdd.city) AS region,
        TIMESTAMPDIFF(HOUR,rdd.dispatchingTime,IFNULL(rdd.TATFinishTime,NOW())) AS transferTime
        <if test="serviceType == '上门'">
            ,CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN '服务提交'
            WHEN rdd.finishTime IS NOT NULL
            THEN '服务完成'
            WHEN rdd.pendingState = '解挂'
            THEN '解挂'
            <if test="from == 'all' and isErr == 1 and nodeName != '服务提交'">
                WHEN yt.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN yt.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            <if test="!(from == 'all' and isErr == 1 and nodeName != '服务提交')">
                WHEN oder.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN oder.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            WHEN rdd.pendingState = '挂单'
            THEN '挂单'
            WHEN rdd.firstVisitTime IS NOT NULL
            THEN '上门'
            WHEN rdd.appointmentOperationTime IS NOT NULL
            THEN '预约'
            WHEN rdd.receiptTime IS NOT NULL
            THEN '接单'
            ELSE '派工'
            END AS title
        </if>
        <if test="serviceType == '送修'">
            ,CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN '服务提交'
            WHEN rdd.finishTime IS NOT NULL OR rdd.customerDeliveryTime IS NOT NULL
            THEN '服务完成'
            WHEN rdd.shopReturnTime IS NOT NULL
            THEN '还件'
            <if test="from == 'all' and isErr == 1 and nodeName != '服务提交'">
                WHEN yt.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN yt.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            <if test="!(from == 'all' and isErr == 1 and nodeName != '服务提交')">
                WHEN oder.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN oder.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            WHEN rdd.serviceNumber IS NOT NULL
            THEN '非上门服务单'
            ELSE '派工'
            END AS title
        </if>
        <if test="serviceType == '寄修'">
            ,CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN '服务提交'
            WHEN rdd.finishTime IS NOT NULL OR rdd.customerDeliveryTime IS NOT NULL
            THEN '服务完成'
            WHEN rdd.returnCollectionTime IS NOT NULL
            THEN '还件揽收'
            WHEN rdd.shopReturnTime IS NOT NULL
            THEN '还件'
            <if test="from == 'all' and isErr == 1 and nodeName != '服务提交'">
                WHEN yt.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN yt.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            <if test="!(from == 'all' and isErr == 1 and nodeName != '服务提交')">
                WHEN oder.appropriateInvestTime IS NOT NULL
                THEN '零件供应'
                WHEN oder.orderStartTime IS NOT NULL
                THEN '作业订单'
            </if>
            WHEN rdd.serviceNumber IS NOT NULL
            THEN '非上门服务单'
            WHEN rdd.shopDeliveryTime IS NOT NULL
            THEN '寄修到件'
            ELSE '派工'
            END AS title
        </if>
        FROM t_region_dispatching_detail rdd
        <if test="from != 'averageEligible'">
            force index(in_dt,in_or)
        </if>
        <if test="from == 'averageEligible'">
            force index(in_wc,in_or)
        </if>
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber AND rss.accountingCenterCode = rdd.accountingCenterCode
        LEFT JOIN (
        SELECT od.dispatchingOrder,od.orderStartTime,MAX(r.appropriateInvestTime)AS appropriateInvestTime
        FROM t_order_detail od
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
        LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
        GROUP BY od.dispatchingOrder,od.orderStartTime
        )oder ON oder.dispatchingOrder = rdd.dispatchingOrder
        <if test="from == 'solveEligible' or from == 'schemeEligible' or isComplaint == 1">
            LEFT JOIN (SELECT DISTINCT
            ch.dispatchingOrder FROM t_complaint_handling ch) dch
            ON dch.dispatchingOrder = rdd.dispatchingOrder
        </if>
        <if test="serviceType == '上门' and from == 'all' and isErr == 1 and  nodeName != '服务提交'">
            LEFT JOIN (SELECT rdd1.dispatchingOrder ,oder1.appropriateInvestTime,oder1.orderStartTime,CASE

            WHEN rdd1.submissionTime IS NOT NULL THEN
            0
            WHEN rdd1.finishTime IS NOT NULL THEN
            TIMESTAMPDIFF(
            DAY,
            rdd1.dispatchingTime,
            rdd1.TATFinishTime) &gt; 4
            WHEN rdd1.pendingState = '解挂' THEN
            0
            WHEN oder1.appropriateInvestTime IS NOT NULL THEN
            oder1.ljgy
            WHEN oder1.orderStartTime IS NOT NULL THEN
            oder1.zydd
            WHEN rdd1.pendingState = '挂单' THEN
            TIMESTAMPDIFF(
            DAY,
            SUBSTR( rdd1.visitTime, 1, 10 ),
            DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
            WHEN rdd1.firstVisitTime IS NOT NULL THEN
            TIMESTAMPDIFF(
            DAY,
            SUBSTR( rdd1.visitTime, 1, 10 ),
            DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
            WHEN rdd1.appointmentOperationTime IS NOT NULL THEN
            DATE_FORMAT( NOW(), '%Y-%m-%d %H:%i:%S' ) &gt;
            IF
            (
            CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ) ) &lt; LEFT ( rdd1.appointmentTimeSection, 16 ),
            DATE_ADD( CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ), ':00' ), INTERVAL 1 DAY ),
            CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ), ':00' ))
            WHEN rdd1.receiptTime IS NOT NULL THEN
            TIMESTAMPDIFF( MINUTE, rdd1.dispatchingTime, NOW() ) &gt; 30 ELSE 0
            END AS outTimeCount
            FROM
            t_region_dispatching_detail rdd1 FORCE INDEX ( in_dt, in_or )
            LEFT JOIN (
            SELECT
            tp1.dispatchingOrder,
            MAX( tp1.orderStartTime ) AS orderStartTime,
            IF
            (
            SUM( tp1.qs ) &gt; 0,
            NULL,
            MAX( tp1.appropriateInvestTime )) AS appropriateInvestTime,
            SUM( tp1.jnl )&gt; 1 AS zydd,
            SUM( tp1.nds2 )&gt; 1
            OR COUNT( tp1.documentNo ) &gt; 1 AS ljgy
            FROM
            (
            SELECT
            od1.dispatchingOrder,
            od1.documentNumber,
            od1.orderStartTime,
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', 1, 0 ) AS qs,
            r1.appropriateInvestTime,
            ( po1.state != '2' AND po1.isShipment = '0' ) AS jnl,
            ((
            r1.appropriateInvestTime IS NOT NULL
            OR r1.goodTime IS NOT NULL
            )
            AND TimeStampDiff(
            DAY,
            r1.deliveryTime,
            IF
            (
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', '3022-12-12 00:00:00', r1.appropriateInvestTime )&gt;
            IF
            ( r1.goodTime IS NULL OR r1.goodTime = '', '3022-12-12 00:00:00', r1.goodTime ),
            substring( r1.goodTime, 1, 10 ),
            substring( r1.appropriateInvestTime, 1, 10 ))) &gt; 2
            ) AS nds2,
            msuo1.documentNo
            FROM
            t_order_detail od1
            LEFT JOIN t_part_order po1 ON po1.documentNumber = od1.documentNumber
            LEFT JOIN t_receipt_detail rd1 ON rd1.associatedOrderNumber = od1.documentNumber
            LEFT JOIN t_receipt r1 ON r1.documentNumber = rd1.documentNumber
            LEFT JOIN t_miss_stock_up_order msuo1 ON msuo1.associatedOrderNumber = od1.documentNumber
            WHERE
            od1.dispatchingOrder IS NOT NULL
            ) tp1
            GROUP BY
            tp1.dispatchingOrder
            ) oder1 ON oder1.dispatchingOrder = rdd1.dispatchingOrder
            <where>
                <if test="endTime != null and endTime != '' ">
                    AND rdd1.dispatchingTime &lt;= #{endTime}
                </if>
                <if test="startTime != null and startTime != '' ">
                    AND rdd1.dispatchingTime &gt;= #{startTime}
                </if>
            </where>
            )yt ON yt.dispatchingOrder = rdd.dispatchingOrder
        </if>
        <if test="serviceType == '送修' and from == 'all' and isErr == 1 and  nodeName != '服务提交'">
            LEFT JOIN (SELECT rdd1.dispatchingOrder ,oder1.appropriateInvestTime,oder1.orderStartTime,CASE
            WHEN rdd1.submissionTime IS NOT NULL
            THEN 0
            WHEN rdd1.finishTime IS NOT NULL
            THEN TIMESTAMPDIFF(
            DAY,
            rdd1.dispatchingTime,
            rdd1.TATFinishTime) &gt; 4
            WHEN rdd1.shopReturnTime IS NOT NULL
            THEN 0
            WHEN oder1.appropriateInvestTime IS NOT NULL
            THEN oder1.ljgy
            WHEN oder1.orderStartTime IS NOT NULL
            THEN oder1.zydd
            WHEN rdd1.serviceNumber IS NOT NULL
            THEN 0
            ELSE 0
            END
            AS outTimeCount
            FROM
            t_region_dispatching_detail rdd1 FORCE INDEX ( in_dt, in_or )
            LEFT JOIN (
            SELECT
            tp1.dispatchingOrder,
            MAX( tp1.orderStartTime ) AS orderStartTime,
            IF
            (
            SUM( tp1.qs ) &gt; 0,
            NULL,
            MAX( tp1.appropriateInvestTime )) AS appropriateInvestTime,
            SUM( tp1.jnl )&gt; 1 AS zydd,
            SUM( tp1.nds2 )&gt; 1
            OR COUNT( tp1.documentNo ) &gt; 1 AS ljgy
            FROM
            (
            SELECT
            od1.dispatchingOrder,
            od1.documentNumber,
            od1.orderStartTime,
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', 1, 0 ) AS qs,
            r1.appropriateInvestTime,
            ( po1.state != '2' AND po1.isShipment = '0' ) AS jnl,
            ((
            r1.appropriateInvestTime IS NOT NULL
            OR r1.goodTime IS NOT NULL
            )
            AND TimeStampDiff(
            DAY,
            r1.deliveryTime,
            IF
            (
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', '3022-12-12 00:00:00', r1.appropriateInvestTime )&gt;
            IF
            ( r1.goodTime IS NULL OR r1.goodTime = '', '3022-12-12 00:00:00', r1.goodTime ),
            substring( r1.goodTime, 1, 10 ),
            substring( r1.appropriateInvestTime, 1, 10 ))) &gt; 2
            ) AS nds2,
            msuo1.documentNo
            FROM
            t_order_detail od1
            LEFT JOIN t_part_order po1 ON po1.documentNumber = od1.documentNumber
            LEFT JOIN t_receipt_detail rd1 ON rd1.associatedOrderNumber = od1.documentNumber
            LEFT JOIN t_receipt r1 ON r1.documentNumber = rd1.documentNumber
            LEFT JOIN t_miss_stock_up_order msuo1 ON msuo1.associatedOrderNumber = od1.documentNumber
            WHERE
            od1.dispatchingOrder IS NOT NULL
            ) tp1
            GROUP BY
            tp1.dispatchingOrder
            ) oder1 ON oder1.dispatchingOrder = rdd1.dispatchingOrder
            <where>
                <if test="endTime != null and endTime != '' ">
                    AND rdd1.dispatchingTime &lt;= #{endTime}
                </if>
                <if test="startTime != null and startTime != '' ">
                    AND rdd1.dispatchingTime &gt;= #{startTime}
                </if>
            </where>
            )yt ON yt.dispatchingOrder = rdd.dispatchingOrder
        </if>
        <if test="serviceType == '寄修' and from == 'all' and isErr == 1 and  nodeName != '服务提交'">
            LEFT JOIN (SELECT
            rdd1.dispatchingOrder,oder1.appropriateInvestTime,oder1.orderStartTime,
            CASE

            WHEN rdd1.submissionTime IS NOT NULL THEN
            0
            WHEN rdd1.finishTime IS NOT NULL OR rdd1.customerDeliveryTime IS NOT NULL THEN
            TIMESTAMPDIFF(
            DAY,
            rdd1.dispatchingTime,
            rdd1.TATFinishTime) &gt; 4
            WHEN rdd1.pendingState = '解挂' THEN
            0
            WHEN oder1.appropriateInvestTime IS NOT NULL THEN
            oder1.ljgy
            WHEN oder1.orderStartTime IS NOT NULL THEN
            oder1.zydd
            WHEN rdd1.pendingState = '挂单' THEN
            TIMESTAMPDIFF(
            DAY,
            SUBSTR( rdd1.visitTime, 1, 10 ),
            DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
            WHEN rdd1.firstVisitTime IS NOT NULL THEN
            TIMESTAMPDIFF(
            DAY,
            SUBSTR( rdd1.visitTime, 1, 10 ),
            DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
            WHEN rdd1.appointmentOperationTime IS NOT NULL THEN
            DATE_FORMAT( NOW(), '%Y-%m-%d %H:%i:%S' ) &gt;
            IF
            (
            CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ) ) &lt; LEFT ( rdd1.appointmentTimeSection, 16 ),
            DATE_ADD( CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ), ':00' ), INTERVAL 1 DAY ),
            CONCAT( LEFT ( rdd1.appointmentTimeSection, 11 ), RIGHT ( rdd1.appointmentTimeSection, 5 ), ':00' ))
            WHEN rdd1.receiptTime IS NOT NULL THEN
            TIMESTAMPDIFF( MINUTE, rdd1.dispatchingTime, NOW() ) &gt; 30 ELSE 0
            END AS outTimeCount
            FROM
            t_region_dispatching_detail rdd1 FORCE INDEX ( in_dt, in_or )
            LEFT JOIN (
            SELECT
            tp1.dispatchingOrder,
            MAX( tp1.orderStartTime ) AS orderStartTime,
            IF
            (
            SUM( tp1.qs ) &gt; 0,
            NULL,
            MAX( tp1.appropriateInvestTime )) AS appropriateInvestTime,
            SUM( tp1.jnl )&gt; 1 AS zydd,
            SUM( tp1.nds2 )&gt; 1
            OR COUNT( tp1.documentNo ) &gt; 1 AS ljgy
            FROM
            (
            SELECT
            od1.dispatchingOrder,
            od1.documentNumber,
            od1.orderStartTime,
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', 1, 0 ) AS qs,
            r1.appropriateInvestTime,
            ( po1.state != '2' AND po1.isShipment = '0' ) AS jnl,
            ((
            r1.appropriateInvestTime IS NOT NULL
            OR r1.goodTime IS NOT NULL
            )
            AND TimeStampDiff(
            DAY,
            r1.deliveryTime,
            IF
            (
            IF
            ( r1.appropriateInvestTime IS NULL OR r1.appropriateInvestTime = '', '3022-12-12 00:00:00', r1.appropriateInvestTime )&gt;
            IF
            ( r1.goodTime IS NULL OR r1.goodTime = '', '3022-12-12 00:00:00', r1.goodTime ),
            substring( r1.goodTime, 1, 10 ),
            substring( r1.appropriateInvestTime, 1, 10 ))) &gt; 2
            ) AS nds2,
            msuo1.documentNo
            FROM
            t_order_detail od1
            LEFT JOIN t_part_order po1 ON po1.documentNumber = od1.documentNumber
            LEFT JOIN t_receipt_detail rd1 ON rd1.associatedOrderNumber = od1.documentNumber
            LEFT JOIN t_receipt r1 ON r1.documentNumber = rd1.documentNumber
            LEFT JOIN t_miss_stock_up_order msuo1 ON msuo1.associatedOrderNumber = od1.documentNumber
            WHERE
            od1.dispatchingOrder IS NOT NULL
            ) tp1
            GROUP BY
            tp1.dispatchingOrder
            ) oder1 ON oder1.dispatchingOrder = rdd1.dispatchingOrder
            <where>
                <if test="endTime != null and endTime != '' ">
                    AND rdd1.dispatchingTime &lt;= #{endTime}
                </if>
                <if test="startTime != null and startTime != '' ">
                    AND rdd1.dispatchingTime &gt;= #{startTime}
                </if>
            </where>
            )yt ON yt.dispatchingOrder = rdd.dispatchingOrder
        </if>
        WHERE rdd.serviceType IN (
        '安装','维修','鉴定','非上门维修'
        )
        <if test="!(from == 'all'  and (nodeName == null or nodeName == ''))">
            AND rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        </if>
        <if test="serviceType == '上门'">
            AND (rdd.serviceType = '维修' OR rdd.serviceType = '安装' OR (rdd.serviceType = '鉴定' AND (rdd.firstServiceType = '维修' OR rdd.firstServiceType = '安装')))
        </if>
        <if test="serviceType == '送修'">
            AND rdd.serviceWay='送修' AND (rdd.serviceType = '非上门维修' OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'))
        </if>
        <if test="serviceType == '寄修'">
            AND rdd.serviceWay='寄修' AND (rdd.serviceType = '非上门维修' OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'))
        </if>
            <if test="WHERE != null and WHERE != '' ">
                AND ${WHERE}
            </if>
            <if test="from != 'averageEligible'">
                <if test="endTime != null and endTime != '' ">
                    AND rdd.dispatchingTime &lt;= #{endTime}
                </if>
                <if test="startTime != null and startTime != '' ">
                    AND rdd.dispatchingTime &gt;= #{startTime}
                </if>
            </if>
            <if test="from == 'averageEligible'">
                <if test="endTime != null and endTime != '' ">
                    AND rdd.TATFinishTime &lt;= #{endTime}
                </if>
                <if test="startTime != null and startTime != '' ">
                    AND rdd.TATFinishTime &gt;= #{startTime}
                </if>
            </if>
            <if test="from == 'solveEligible' or from == 'schemeEligible' or isComplaint == 1">
                AND dch.dispatchingOrder IS NOT NULL
            </if>
        <if test="from == 'all' and isErr == 1 and nodeName == '服务提交'">
            and(
            (rdd.finishTime IS NOT NULL and  rdd.submissionTime IS NULL
            and TIMESTAMPDIFF( DAY,SUBSTRING(rdd.dispatchingTime,1,10) , DATE_FORMAT(NOW(), '%Y-%m-%d') ) &gt;  80)
            )
        </if>
        <if test="from == 'all' and isErr == 1 and  nodeName != '服务提交'">
            AND yt.outTimeCount = 1
        </if>
            <if test="from != 'all' and from != null and isErr == 1">
                AND ${from} = 0
            </if>
            <if test="from == 'averageEligible' or from == 'solveEligible' or from == 'repairEligible' or from == 'schemeEligible'">
                AND rdd.${from} IS NOT NULL
            </if>
            <if test="accountingAreaCode != null and accountingAreaCode != '' ">
                AND rdd.accountingAreaCode = #{accountingAreaCode}
            </if>
            <if test="storeNumber != null and storeNumber != '' ">
                AND rdd.storeNumber = #{storeNumber}
            </if>
            <if test="accountingCenterCode != null and accountingCenterCode != '' ">
                AND rdd.accountingCenterCode = #{accountingCenterCode}
            </if>
            <if test="engineerId != null and engineerId != '' ">
                AND rdd.engineerId = #{engineerId}
            </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd. productCategoryCode IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd. productTypeCode IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd. productCategoryCode IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd. productTypeCode IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        )t
        <where>
            <if test="QUERY != null and QUERY != '' ">
                 ${QUERY}
            </if>
            <if test="isErr == 1 and nodeName == '服务提交' ">
                <if test="serviceType == '上门'">
                    AND t.submissionTime IS NULL AND t.finishTime IS NOT NULL
                </if>
                <if test="serviceType == '送修'">
                    AND t.submissionTime IS NULL AND (t.finishTime IS NOT NULL OR t.customerDeliveryTime IS NOT NULL)
                </if>
                <if test="serviceType == '寄修'">
                    AND t.submissionTime IS NULL AND (t.finishTime IS NOT NULL OR t.customerDeliveryTime IS NOT NULL)
                </if>
            </if>
            <if test="isErr != 1 and nodeName != null and nodeName != '' ">
                AND title = #{nodeName}
            </if>
            <if test="isErr == 1 and nodeName != null and nodeName != '服务提交' and nodeName != '' ">
                AND title = #{nodeName}
            </if>
        </where>
        <if test="ORDERBY != null and ORDERBY != '' ">
            order by ${ORDERBY}
        </if>
        <if test="page != null and page != '' ">
            limit #{pageStart},10
        </if>
    </select>
    <select id="timelyPie" resultType="Long">
        SELECT
        CASE
        WHEN SUBSTR(rdd.dispatchingTime, 12,8) &lt; rss.openingTime
                                                       THEN TIMESTAMPDIFF(MINUTE,
        CONCAT(LEFT (rdd.dispatchingTime, 11),rss.openingTime),
        rdd.appointmentOperationTime )

        WHEN SUBSTR(rdd.dispatchingTime, 12,8) &gt; rss.closingTime
        THEN TIMESTAMPDIFF(MINUTE,
        (DATE_ADD(CONCAT(LEFT (rdd.dispatchingTime, 11),rss.openingTime),INTERVAL 1 DAY)),
        rdd.appointmentOperationTime)

        ELSE TIMESTAMPDIFF(MINUTE,
        rdd.dispatchingTime,
        rdd.appointmentOperationTime)
        END AS longTime
        FROM t_region_dispatching_detail rdd
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
    </select>
    <select id="punctualityPie" resultType="java.util.Map">
        SELECT
            CASE
                WHEN rdd.rescheduleFrequency &gt; 0 AND rdd.firstVisitTime IS NULL
                    THEN '已改约未上门'
                WHEN rdd.rescheduleFrequency &gt; 0
                    THEN '已改约已上门'
                WHEN rdd.firstVisitTime IS NULL
                    THEN '未改约未上门'
                ELSE '未改约已上门'
                END AS 'name',
                COUNT(1) AS 'value'
        FROM t_region_dispatching_detail rdd
                 LEFT JOIN t_region_service_store rss
                           ON rss.storeNumber = rdd.storeNumber
                               AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE
            rdd.systemState NOT IN ('已作废','已关闭','申请作废')
          AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
          AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY
            CASE
                WHEN rdd.rescheduleFrequency &gt;0 AND rdd.firstVisitTime IS NULL
                    THEN '已改约未上门'
                WHEN rdd.rescheduleFrequency &gt;0
                    THEN '已改约已上门'
                WHEN rdd.firstVisitTime IS NULL
                    THEN '未改约未上门'
                ELSE '未改约已上门'
                END
    </select>
    <select id="causePie" resultType="java.util.Map">
        SELECT IF(rpo.pendingOrderCause IS NULL OR rpo.pendingOrderCause='其他（备注原因）','其他原因',rpo.pendingOrderCause)AS 'name'
        , COUNT(1) AS 'value'
        FROM t_region_pending_order rpo
                 LEFT JOIN t_region_dispatching_detail rdd
                           ON rdd.dispatchingOrder = rpo.dispatchingOrder
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY IF(rpo.pendingOrderCause IS NULL OR rpo.pendingOrderCause='其他（备注原因）','其他原因',rpo.pendingOrderCause)
    </select>
    <select id="noPendingPie" resultType="java.util.Map">
        SELECT IF(rpo.pendingOrderCause IS NULL OR rpo.pendingOrderCause='其他（备注原因）','其他原因',rpo.pendingOrderCause)AS 'name'
        , COUNT(1) AS 'value'
        FROM t_region_pending_order rpo
        LEFT JOIN t_region_dispatching_detail rdd
        ON rdd.dispatchingOrder = rpo.dispatchingOrder
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND rpo.finishOrderTime IS NULL
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        GROUP BY IF(rpo.pendingOrderCause IS NULL OR rpo.pendingOrderCause='其他（备注原因）','其他原因',rpo.pendingOrderCause)
    </select>
    <select id="repairBar" resultType="java.util.Map">
        SELECT
        t.productCategory AS 'name',
        CAST(IFNULL(ROUND(t.repairEligible / t.repairTotal*100,1 ),0) AS CHAR) AS 'value'
        FROM(SELECT rdd.productCategory,
        SUM(rdd.repairEligible)AS repairEligible,SUM(rdd.repairEligible IS NOT NULL) repairTotal
        FROM t_region_dispatching_detail rdd
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('维修','非上门维修')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
            GROUP BY rdd.productCategory
        )t
    </select>
    <select id="getPartsByOrder" resultType="java.util.Map">
        SELECT tod.dispatchingOrder,tod.documentNumber,tod.orderStartTime,tod.state,MAX(tr.appropriateInvestTime) AS appropriateInvestTime
        FROM t_order_detail tod
                 LEFT JOIN t_receipt_detail trd ON trd.associatedOrderNumber = tod.documentNumber
                 LEFT JOIN t_receipt tr ON tr.documentNumber = trd.documentNumber
        WHERE tod.dispatchingOrder = #{dispatchingOrder}
        GROUP BY tod.dispatchingOrder,tod.orderStartTime,tod.state
        ORDER BY orderStartTime desc
    </select>
    <select id="getMapDate" resultType="java.util.Map">
        SELECT * FROM map_data
    </select>
    <select id="isComplaint" resultType="java.lang.String">
        SELECT DISTINCT ch.dispatchingOrder FROM t_complaint_handling ch
        LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = ch.dispatchingOrder
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        <if test="endTime != null and endTime != '' ">
            AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND rdd.dispatchingTime &gt;= #{startTime}
        </if>

        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>

    </select>
    <select id="isOrder" resultType="java.lang.String">
        SELECT DISTINCT od.dispatchingOrder  FROM t_order_detail od
          LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = od.dispatchingOrder
          LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
          LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
          AND rdd.serviceType IN (
                                  '安装','维修','鉴定','非上门维修'
            )
          AND r.appropriateInvestTime IS NULL
        <if test="endTime != null and endTime != '' ">
            AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND rdd.dispatchingTime &gt;= #{startTime}
        </if>

        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>

    </select>
    <select id="isReceipt" resultType="java.lang.String">
        SELECT t1.dispatchingOrder FROM
            (SELECT DISTINCT od.dispatchingOrder  FROM t_order_detail od
                                                           LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = od.dispatchingOrder
             WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
               AND rdd.serviceType IN (
                                       '安装','维修','鉴定','非上门维修'
                 )
        <if test="endTime != null and endTime != '' ">
            AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <!-- 查询是否是异常单 -->
        <if test="isErr != null and isErr == 1">
            AND (rdd.timelyEligible = 0 or rdd.punctualityEligible = 0 or rdd.averageEligible =0
            or rdd.solveEligible = 0 or rdd.repairEligible = 0 or rdd.schemeEligible = 0)
        </if>
             )t1
                LEFT JOIN
            (SELECT DISTINCT od.dispatchingOrder  FROM t_order_detail od
                                                           LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = od.dispatchingOrder
                                                           LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
                                                           LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
             WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
               AND rdd.serviceType IN (
                                       '安装','维修','鉴定','非上门维修'
                 )
               AND r.documentNumber IS NOT NULL AND r.appropriateInvestTime IS NULL
        <if test="endTime != null and endTime != '' ">
            AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND rdd.dispatchingTime &gt;= #{startTime}
        </if>

        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>

             )t2 ON t2.dispatchingOrder = t1.dispatchingOrder
        WHERE t2.dispatchingOrder IS NULL
    </select>
    <select id="OrderReceipt" resultType="java.lang.String">
        SELECT DISTINCT od.dispatchingOrder FROM t_order_detail od
        LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = od.dispatchingOrder
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN (
        '安装','维修','鉴定','非上门维修'
        )
        <if test="endTime != null and endTime != '' ">
            AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND rdd.dispatchingTime &gt;= #{startTime}
        </if>

        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>

    </select>
    <select id="informationList" resultType="java.util.Map">
        SELECT rti.associatedNumber AS dispatchingOrder,MAX(rti.operationTime) AS operationTime
        FROM t_region_transfer_information rti
                 LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = rti.associatedNumber
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
          AND rdd.serviceType IN (
                                  '安装','维修','鉴定','非上门维修'
            )
        <if test="endTime != null and endTime != '' ">
            AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND rdd.dispatchingTime &gt;= #{startTime}
        </if>

        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>

        GROUP BY rti.associatedNumber
    </select>
    <select id="orderList" resultType="java.util.Map">
        SELECT od.dispatchingOrder,od.orderStartTime,MAX(r.appropriateInvestTime)AS appropriateInvestTime FROM t_order_detail od
            LEFT JOIN t_region_dispatching_detail rdd ON rdd.dispatchingOrder = od.dispatchingOrder
            LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
          LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
            WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
            AND rdd.serviceType IN (
            '安装','维修','鉴定','非上门维修'
            )
        <if test="endTime != null and endTime != '' ">
            AND rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND rdd.dispatchingTime &gt;= #{startTime}
        </if>

        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>

            GROUP BY od.dispatchingOrder
    </select>
    <select id="getUserId" resultType="java.lang.String">
        SELECT DISTINCT ud.userId FROM t_user_district ud
        LEFT JOIN t_region_service_store rss  ON rss.accountingAreaCode=  ud.districtId
        <where>
            <if test="accountingAreaCode != null and accountingAreaCode != '' ">
                AND  rss.accountingAreaCode = #{accountingAreaCode}
            </if>
            <if test="storeNumber != null and storeNumber != '' ">
                AND  rss.storeNumber = #{storeNumber}
            </if>
            <if test="accountingCenterCode != null and accountingCenterCode != '' ">
                AND  rss.accountingCenterCode = #{accountingCenterCode}
            </if>
        </where>
    </select>
    <select id="tatNServiceCompletionRate" resultType="java.util.Map">
        SELECT t.date,
               IFNULL(SUM(t.averageEligible),0) AS monthTatNServiceCompletionAmout,
               IFNULL(SUM(t.averageEligible IS NOT NULL),0) AS totalTatNServiceCompletionAmout,
               CAST(IFNULL(ROUND(SUM(t.averageEligible)/ SUM(t.averageEligible IS NOT NULL),4),'0.0000')AS CHAR) AS dataValue
        FROM
            (
                SELECT rdd.dispatchingOrder,
                    LEFT(rdd.TATFinishTime,7)AS date,
                    (CASE

                    WHEN rdd.average &gt;= 3600 AND rdd.average &lt;= ${days}*24*60*60
                    AND (rdd.serviceType in('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType in('安装','维修')))
                    THEN 1
                    WHEN (rdd.serviceType = '非上门维修' OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'))
                    AND rdd.average &lt;= ${days}*24*60*60
                    THEN 1
                    WHEN rdd.average &lt; 3600 AND (rdd.serviceType in('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType in('安装','维修')))
                    THEN NULL
                    ELSE 0 END)
                    averageEligible
                FROM t_region_dispatching_detail rdd
                WHERE
                    rdd.systemState NOT IN ('已作废','已关闭','申请作废')
                  AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
                  AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')

                  AND rdd.average IS NOT NULL
                  AND (rdd.accountingCenterCode = 'CS01' OR rdd.accountingCenterCode = 'CS02')
                  AND rdd.TATFinishTime &gt;= #{startTime}
                  AND rdd.TATFinishTime &lt;= #{endTime}
            )t
        GROUP BY t.date
    </select>
    <select id="nDaysComplaintHandleData1" resultType="java.util.Map">
        SELECT t.date,SUM(t.monthComplaintAmount) AS monthComplaintAmount,COUNT(1) AS totalComplaintAmount,CAST(IFNULL(ROUND(SUM(t.monthComplaintAmount)/COUNT(1),4),'0.0000')AS CHAR) AS dataValue
        FROM
        (SELECT LEFT
        ( ch.complaintStartTime, 7 ) AS date,
        IF
        (
        IF
        (
        ch.complaintStartTime = ''
        OR ch.solutionSubmissionTime = '',
        NULL,
        TIMESTAMPDIFF( DAY, LEFT ( ch.complaintStartTime, 10 ), LEFT ( ch.solutionSubmissionTime, 10 ) ))&lt;= 1,
        1,
        0
        ) AS monthComplaintAmount
        FROM
        t_complaint_handling ch
        WHERE
        ch.complaintStartTime &lt;= #{endTime}
        AND ch.complaintStartTime &gt;= #{startTime}
        AND (ch.accountingCenterCode = 'CS01' OR ch.accountingCenterCode = 'CS02')
        )t
        GROUP BY t.date
    </select>
    <select id="nDaysComplaintHandleData7" resultType="java.util.Map">
        SELECT t.date,SUM(t.monthComplaintAmount) AS monthComplaintAmount,COUNT(1) AS totalComplaintAmount,CAST(IFNULL(ROUND(SUM(t.monthComplaintAmount)/COUNT(1),4),'0.0000')AS CHAR) AS dataValue
        FROM (
        SELECT
        LEFT(ch.complaintStartTime,7)AS date,
        TIMESTAMPDIFF(DAY,LEFT(ch.complaintStartTime,10),
        IF(length(trim(ch.solutionLandingTime)) &gt; 0, ch.solutionLandingTime, ch.complaintEndTime )) - exceptionDay &lt;= 7 AS monthComplaintAmount
        FROM
        t_complaint_handling ch
        WHERE
        ch.complaintStartTime &lt;= #{endTime}
        AND ch.complaintStartTime &gt;= #{startTime}
        AND (ch.accountingCenterCode = 'CS01' OR ch.accountingCenterCode = 'CS02')
        )t
        GROUP BY t.date
    </select>
    <select id="visitMonitoring" resultType="java.util.Map">
        SELECT
            t.title,
            SUM(t.diffMinutes) AS diffMinutes,
            COUNT(1) AS count,
        SUM(t.outTimeCount) AS outTimeCount
        FROM (
            SELECT rdd.submissionTime,rdd.finishTime,rdd.pendingState,oder.appropriateInvestTime,oder.orderStartTime,rdd.dispatchingOrder,
            CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN '服务提交'
            WHEN rdd.finishTime IS NOT NULL
            THEN '服务完成'
            WHEN rdd.pendingState = '解挂'
            THEN '解挂'
            WHEN oder.appropriateInvestTime IS NOT NULL
            THEN '零件供应'
            WHEN oder.orderStartTime IS NOT NULL
            THEN '作业订单'
            WHEN rdd.pendingState = '挂单'
            THEN '挂单'
            WHEN rdd.firstVisitTime IS NOT NULL
            THEN '上门'
            WHEN rdd.appointmentOperationTime IS NOT NULL
            THEN '预约'
            WHEN rdd.receiptTime IS NOT NULL
            THEN '接单'
            ELSE '派工'
            END AS title,
            CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.finishTime , rdd.submissionTime )
            WHEN rdd.finishTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.firstVisitTime , rdd.finishTime )
            WHEN rdd.pendingState = '解挂'
            THEN rdd.pendingTime/60
            WHEN oder.appropriateInvestTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,oder.orderStartTime , oder.appropriateInvestTime )
            WHEN oder.orderStartTime IS NOT NULL
            THEN 0
            WHEN rdd.pendingState = '挂单'
            THEN 0
            WHEN rdd.firstVisitTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.appointmentOperationTime , rdd.firstVisitTime )
            WHEN rdd.appointmentOperationTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.receiptTime , rdd.appointmentOperationTime )
            WHEN rdd.receiptTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.dispatchingTime , rdd.receiptTime )
            ELSE 0
            END AS diffMinutes,
        CASE

        WHEN rdd.submissionTime IS NOT NULL THEN
        0
        WHEN rdd.finishTime IS NOT NULL THEN
        TIMESTAMPDIFF(
        DAY,
        rdd.dispatchingTime,
        rdd.TATFinishTime) &gt; 4
        WHEN rdd.pendingState = '解挂' THEN
        0
        WHEN oder.appropriateInvestTime IS NOT NULL THEN
        oder.ljgy
        WHEN oder.orderStartTime IS NOT NULL THEN
        oder.zydd
        WHEN rdd.pendingState = '挂单' THEN
        TIMESTAMPDIFF(
        DAY,
        SUBSTR( rdd.visitTime, 1, 10 ),
        DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
        WHEN rdd.firstVisitTime IS NOT NULL THEN
        TIMESTAMPDIFF(
        DAY,
        SUBSTR( rdd.visitTime, 1, 10 ),
        DATE_FORMAT( NOW(), '%Y-%m-%d' )) &gt; 1
        WHEN rdd.appointmentOperationTime IS NOT NULL THEN
        DATE_FORMAT( NOW(), '%Y-%m-%d %H:%i:%S' ) &gt;
        IF
        (
        CONCAT( LEFT ( rdd.appointmentTimeSection, 11 ), RIGHT ( rdd.appointmentTimeSection, 5 ) ) &lt; LEFT ( rdd.appointmentTimeSection, 16 ),
        DATE_ADD( CONCAT( LEFT ( rdd.appointmentTimeSection, 11 ), RIGHT ( rdd.appointmentTimeSection, 5 ), ':00' ), INTERVAL 1 DAY ),
        CONCAT( LEFT ( rdd.appointmentTimeSection, 11 ), RIGHT ( rdd.appointmentTimeSection, 5 ), ':00' ))
        WHEN rdd.receiptTime IS NOT NULL THEN
        TIMESTAMPDIFF( MINUTE, rdd.dispatchingTime, NOW() ) &gt; 30 ELSE 0
        END AS outTimeCount
        FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
            LEFT JOIN t_region_service_store rss
            ON rss.storeNumber = rdd.storeNumber AND rss.accountingCenterCode = rdd.accountingCenterCode
            LEFT JOIN (

        SELECT
        tp.dispatchingOrder,
        MAX( tp.orderStartTime ) AS orderStartTime,
        IF
        (
        SUM( tp.qs ) &gt; 0,
        NULL,
        MAX( tp.appropriateInvestTime )) AS appropriateInvestTime,
        SUM( tp.jnl )&gt; 1 AS zydd,
        SUM( tp.nds2 )&gt; 1
        OR COUNT( tp.documentNo ) &gt; 1 AS ljgy
        FROM
        (
        SELECT
        od.dispatchingOrder,
        od.documentNumber,
        od.orderStartTime,
        IF
        ( r.appropriateInvestTime IS NULL OR r.appropriateInvestTime = '', 1, 0 ) AS qs,
        r.appropriateInvestTime,
        ( po.state != '2' AND po.isShipment = '0' ) AS jnl,
        ((
        r.appropriateInvestTime IS NOT NULL
        OR r.goodTime IS NOT NULL
        )
        AND TimeStampDiff(
        DAY,
        r.deliveryTime,
        IF
        (
        IF
        ( r.appropriateInvestTime IS NULL OR r.appropriateInvestTime = '', '3022-12-12 00:00:00', r.appropriateInvestTime )&gt;
        IF
        ( r.goodTime IS NULL OR r.goodTime = '', '3022-12-12 00:00:00', r.goodTime ),
        substring( r.goodTime, 1, 10 ),
        substring( r.appropriateInvestTime, 1, 10 ))) &gt; 2
        ) AS nds2,
        msuo.documentNo
        FROM
        t_order_detail od
        LEFT JOIN t_part_order po ON po.documentNumber = od.documentNumber
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
        LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
        LEFT JOIN t_miss_stock_up_order msuo ON msuo.associatedOrderNumber = od.documentNumber
        WHERE
        od.dispatchingOrder IS NOT NULL
        ) tp
        GROUP BY
        tp.dispatchingOrder

        )oder ON oder.dispatchingOrder = rdd.dispatchingOrder
            WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
            AND (rdd.serviceType = '维修' OR rdd.serviceType = '安装' OR (rdd.serviceType = '鉴定' AND (rdd.firstServiceType = '维修' OR rdd.firstServiceType = '安装')))
            <if test="startTime != null and startTime != '' ">
                AND  rdd.dispatchingTime &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime != '' ">
                AND  rdd.dispatchingTime &lt;= #{endTime}
            </if>
            <if test="accountingAreaCode != null and accountingAreaCode != '' ">
                AND  rdd.accountingAreaCode = #{accountingAreaCode}
            </if>
            <if test="storeNumber != null and storeNumber != '' ">
                AND  rdd.storeNumber = #{storeNumber}
            </if>
            <if test="accountingCenterCode != null and accountingCenterCode != '' ">
                AND  rdd.accountingCenterCode = #{accountingCenterCode}
            </if>
            <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
                AND (rdd.productCategoryCode  IN (
                <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)
                OR rdd.productTypeCode  IN (
                <foreach collection="productTypeCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)
                )
            </if>
            <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
                AND rdd.productCategoryCode  IN (
                <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)

            </if>
            <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
                AND rdd.productTypeCode  IN (
                <foreach collection="productTypeCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)

            </if>
            )t
        GROUP BY t.title


    </select>
    <select id="giveMonitoring" resultType="java.util.Map">
        SELECT
            t.title,
            SUM(t.diffMinutes) AS diffMinutes,
            COUNT(1) AS count,
SUM(t.outTimeCount) AS outTimeCount
        FROM (
            SELECT
            CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN '服务提交'
            WHEN rdd.finishTime IS NOT NULL
            THEN '服务完成'
            WHEN rdd.shopReturnTime IS NOT NULL
            THEN '还件'
            WHEN oder.appropriateInvestTime IS NOT NULL
            THEN '零件供应'
            WHEN oder.orderStartTime IS NOT NULL
            THEN '作业订单'
            WHEN rdd.serviceNumber IS NOT NULL
            THEN '非上门服务单'
            ELSE '派工'
            END AS title,
            CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.finishTime , rdd.submissionTime )
            WHEN rdd.finishTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.shopReturnTime , rdd.finishTime )
            WHEN rdd.shopReturnTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.dispatchingTime , rdd.shopReturnTime )
            WHEN oder.appropriateInvestTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,oder.orderStartTime , oder.appropriateInvestTime )
            WHEN oder.orderStartTime IS NOT NULL
            THEN 0
            WHEN rdd.serviceNumber IS NOT NULL
            THEN 0
            ELSE 0
            END AS diffMinutes,
        CASE
        WHEN rdd.submissionTime IS NOT NULL
        THEN 0
        WHEN rdd.finishTime IS NOT NULL OR rdd.customerDeliveryTime IS NOT NULL
        THEN TIMESTAMPDIFF(
        DAY,
        rdd.dispatchingTime,
        rdd.TATFinishTime) &gt; 4
        WHEN rdd.shopReturnTime IS NOT NULL
        THEN 0
        WHEN oder.appropriateInvestTime IS NOT NULL
        THEN oder.ljgy
        WHEN oder.orderStartTime IS NOT NULL
        THEN oder.zydd
        WHEN rdd.serviceNumber IS NOT NULL
        THEN 0
        ELSE 0
        END
        AS outTimeCount
            FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
            LEFT JOIN t_region_service_store rss
            ON rss.storeNumber = rdd.storeNumber AND rss.accountingCenterCode = rdd.accountingCenterCode
            LEFT JOIN (
        SELECT
        tp.dispatchingOrder,
        MAX( tp.orderStartTime ) AS orderStartTime,
        IF
        (
        SUM( tp.qs ) &gt; 0,
        NULL,
        MAX( tp.appropriateInvestTime )) AS appropriateInvestTime,
        SUM( tp.jnl )&gt; 1 AS zydd,
        SUM( tp.nds2 )&gt; 1
        OR COUNT( tp.documentNo ) &gt; 1 AS ljgy
        FROM
        (
        SELECT
        od.dispatchingOrder,
        od.documentNumber,
        od.orderStartTime,
        IF
        ( r.appropriateInvestTime IS NULL OR r.appropriateInvestTime = '', 1, 0 ) AS qs,
        r.appropriateInvestTime,
        ( po.state != '2' AND po.isShipment = '0' ) AS jnl,
        ((
        r.appropriateInvestTime IS NOT NULL
        OR r.goodTime IS NOT NULL
        )
        AND TimeStampDiff(
        DAY,
        r.deliveryTime,
        IF
        (
        IF
        ( r.appropriateInvestTime IS NULL OR r.appropriateInvestTime = '', '3022-12-12 00:00:00', r.appropriateInvestTime )&gt;
        IF
        ( r.goodTime IS NULL OR r.goodTime = '', '3022-12-12 00:00:00', r.goodTime ),
        substring( r.goodTime, 1, 10 ),
        substring( r.appropriateInvestTime, 1, 10 ))) &gt; 2
        ) AS nds2,
        msuo.documentNo
        FROM
        t_order_detail od
        LEFT JOIN t_part_order po ON po.documentNumber = od.documentNumber
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
        LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
        LEFT JOIN t_miss_stock_up_order msuo ON msuo.associatedOrderNumber = od.documentNumber
        WHERE
        od.dispatchingOrder IS NOT NULL
        ) tp
        GROUP BY
        tp.dispatchingOrder
        )oder ON oder.dispatchingOrder = rdd.dispatchingOrder
            WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
            AND rdd.serviceWay='送修' AND (rdd.serviceType = '非上门维修' OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'))
            <if test="startTime != null and startTime != '' ">
                AND  rdd.dispatchingTime &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime != '' ">
                AND  rdd.dispatchingTime &lt;= #{endTime}
            </if>
            <if test="accountingAreaCode != null and accountingAreaCode != '' ">
                AND  rdd.accountingAreaCode = #{accountingAreaCode}
            </if>
            <if test="storeNumber != null and storeNumber != '' ">
                AND  rdd.storeNumber = #{storeNumber}
            </if>
            <if test="accountingCenterCode != null and accountingCenterCode != '' ">
                AND  rdd.accountingCenterCode = #{accountingCenterCode}
            </if>
            <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
                AND (rdd.productCategoryCode  IN (
                <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)
                OR rdd.productTypeCode  IN (
                <foreach collection="productTypeCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)
                )
            </if>
            <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
                AND rdd.productCategoryCode  IN (
                <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)

            </if>
            <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
                AND rdd.productTypeCode  IN (
                <foreach collection="productTypeCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)

            </if>
            )t
        GROUP BY t.title


    </select>
    <select id="sendMonitoring" resultType="java.util.Map">
        SELECT
            t.title,
            SUM(t.diffMinutes) AS diffMinutes,
            COUNT(1) AS count,
SUM(t.outTimeCount) AS outTimeCount
        FROM (
            SELECT
            CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN '服务提交'
            WHEN rdd.finishTime IS NOT NULL OR rdd.customerDeliveryTime IS NOT NULL
            THEN '服务完成'
            WHEN rdd.returnCollectionTime IS NOT NULL
            THEN '还件揽收'
            WHEN rdd.shopReturnTime IS NOT NULL
            THEN '还件'
            WHEN oder.appropriateInvestTime IS NOT NULL
            THEN '零件供应'
            WHEN oder.orderStartTime IS NOT NULL
            THEN '作业订单'
            WHEN rdd.serviceNumber IS NOT NULL
            THEN '非上门服务单'
            WHEN rdd.shopDeliveryTime IS NOT NULL
            THEN '寄修到件'
            ELSE '派工'
            END AS title,
            CASE
            WHEN rdd.submissionTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.finishTime , rdd.submissionTime )
            WHEN rdd.finishTime IS NOT NULL OR rdd.customerDeliveryTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.returnCollectionTime , rdd.finishTime )
            WHEN rdd.returnCollectionTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.shopReturnTime , rdd.returnCollectionTime )
            WHEN rdd.shopReturnTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,rdd.shopDeliveryTime , rdd.shopReturnTime )
            WHEN oder.appropriateInvestTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,oder.orderStartTime , oder.appropriateInvestTime )
            WHEN oder.orderStartTime IS NOT NULL
            THEN 0
            WHEN rdd.serviceNumber IS NOT NULL
            THEN 0
            WHEN rdd.shopDeliveryTime IS NOT NULL
            THEN TIMESTAMPDIFF( minute,dispatchingTime , shopDeliveryTime )
            ELSE 0
            END AS diffMinutes,
        CASE
        WHEN rdd.submissionTime IS NOT NULL
        THEN 0
        WHEN rdd.finishTime IS NOT NULL OR rdd.customerDeliveryTime IS NOT NULL
        THEN TIMESTAMPDIFF(
        DAY,
        rdd.dispatchingTime,
        rdd.TATFinishTime) &gt; 4
        WHEN rdd.returnCollectionTime IS NOT NULL
        THEN 0
        WHEN rdd.shopReturnTime IS NOT NULL
        THEN 0
        WHEN oder.appropriateInvestTime IS NOT NULL
        THEN oder.ljgy
        WHEN oder.orderStartTime IS NOT NULL
        THEN oder.zydd
        WHEN rdd.serviceNumber IS NOT NULL
        THEN 0
        WHEN rdd.shopDeliveryTime IS NOT NULL
        THEN 0
        ELSE 0
        END  AS outTimeCount
        FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
            LEFT JOIN t_region_service_store rss
            ON rss.storeNumber = rdd.storeNumber AND rss.accountingCenterCode = rdd.accountingCenterCode
            LEFT JOIN (
        SELECT
        tp.dispatchingOrder,
        MAX( tp.orderStartTime ) AS orderStartTime,
        IF
        (
        SUM( tp.qs ) &gt; 0,
        NULL,
        MAX( tp.appropriateInvestTime )) AS appropriateInvestTime,
        SUM( tp.jnl )&gt; 1 AS zydd,
        SUM( tp.nds2 )&gt; 1
        OR COUNT( tp.documentNo ) &gt; 1 AS ljgy
        FROM
        (
        SELECT
        od.dispatchingOrder,
        od.documentNumber,
        od.orderStartTime,
        IF
        ( r.appropriateInvestTime IS NULL OR r.appropriateInvestTime = '', 1, 0 ) AS qs,
        r.appropriateInvestTime,
        ( po.state != '2' AND po.isShipment = '0' ) AS jnl,
        ((
        r.appropriateInvestTime IS NOT NULL
        OR r.goodTime IS NOT NULL
        )
        AND TimeStampDiff(
        DAY,
        r.deliveryTime,
        IF
        (
        IF
        ( r.appropriateInvestTime IS NULL OR r.appropriateInvestTime = '', '3022-12-12 00:00:00', r.appropriateInvestTime )&gt;
        IF
        ( r.goodTime IS NULL OR r.goodTime = '', '3022-12-12 00:00:00', r.goodTime ),
        substring( r.goodTime, 1, 10 ),
        substring( r.appropriateInvestTime, 1, 10 ))) &gt; 2
        ) AS nds2,
        msuo.documentNo
        FROM
        t_order_detail od
        LEFT JOIN t_part_order po ON po.documentNumber = od.documentNumber
        LEFT JOIN t_receipt_detail rd ON rd.associatedOrderNumber = od.documentNumber
        LEFT JOIN t_receipt r ON r.documentNumber = rd.documentNumber
        LEFT JOIN t_miss_stock_up_order msuo ON msuo.associatedOrderNumber = od.documentNumber
        WHERE
        od.dispatchingOrder IS NOT NULL
        ) tp
        GROUP BY
        tp.dispatchingOrder
            )oder ON oder.dispatchingOrder = rdd.dispatchingOrder
            WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废')
            AND rdd.serviceWay='寄修' AND (rdd.serviceType = '非上门维修' OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'))
            <if test="startTime != null and startTime != '' ">
                AND  rdd.dispatchingTime &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime != '' ">
                AND  rdd.dispatchingTime &lt;= #{endTime}
            </if>
            <if test="accountingAreaCode != null and accountingAreaCode != '' ">
                AND  rdd.accountingAreaCode = #{accountingAreaCode}
            </if>
            <if test="storeNumber != null and storeNumber != '' ">
                AND  rdd.storeNumber = #{storeNumber}
            </if>
            <if test="accountingCenterCode != null and accountingCenterCode != '' ">
                AND  rdd.accountingCenterCode = #{accountingCenterCode}
            </if>
            <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
                AND (rdd.productCategoryCode  IN (
                <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)
                OR rdd.productTypeCode  IN (
                <foreach collection="productTypeCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)
                )
            </if>
            <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
                AND rdd.productCategoryCode  IN (
                <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)

            </if>
            <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
                AND rdd.productTypeCode  IN (
                <foreach collection="productTypeCode" item="item" index="index" separator=",">
                    #{item}
                </foreach>)

            </if>
            )t
        GROUP BY t.title


    </select>
    <select id="getOutTimeCount" resultType="java.lang.Integer">
        SELECT count(*)
        FROM t_region_dispatching_detail rdd force index(in_dt,in_or)
        LEFT JOIN t_region_service_store rss
        ON rss.storeNumber = rdd.storeNumber AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE rdd.systemState NOT IN ('已作废','已关闭','申请作废') and  rdd.finishTime IS NOT NULL and  rdd.submissionTime IS NULL and TIMESTAMPDIFF( DAY,SUBSTRING(rdd.dispatchingTime,1,10) , DATE_FORMAT(NOW(), '%Y-%m-%d') ) &gt; 80
        <if test="serviceWay != null and serviceWay != '' and serviceWay=='1'.toString() ">
            AND (rdd.serviceType = '维修' OR rdd.serviceType = '安装' OR (rdd.serviceType = '鉴定' AND (rdd.firstServiceType = '维修' OR rdd.firstServiceType = '安装')))
        </if>
        <if test="serviceWay != null and serviceWay != '' and serviceWay=='2'.toString() ">
            AND rdd.serviceWay='送修' AND (rdd.serviceType = '非上门维修' OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'))
        </if>
        <if test="serviceWay != null and serviceWay != '' and serviceWay=='3'.toString() ">
            AND rdd.serviceWay='寄修' AND (rdd.serviceType = '非上门维修' OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'))
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="accountingAreaCode != null and accountingAreaCode != '' ">
            AND  rdd.accountingAreaCode = #{accountingAreaCode}
        </if>
        <if test="storeNumber != null and storeNumber != '' ">
            AND  rdd.storeNumber = #{storeNumber}
        </if>
        <if test="accountingCenterCode != null and accountingCenterCode != '' ">
            AND  rdd.accountingCenterCode = #{accountingCenterCode}
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and productTypeCode != null and productTypeCode.size>0 ">
            AND (rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            OR rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
            )
        </if>
        <if test="productCategoryCode != null and productCategoryCode.size>0  and (productTypeCode == null or productTypeCode.size == 0) ">
            AND rdd.productCategoryCode  IN (
            <foreach collection="productCategoryCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)

        </if>
        <if test="productTypeCode != null and productTypeCode.size>0  and (productCategoryCode == null or productCategoryCode.size == 0) ">
            AND rdd.productTypeCode  IN (
            <foreach collection="productTypeCode" item="item" index="index" separator=",">
                #{item}
            </foreach>)
        </if>
    </select>
    <update id="TATFinishTime">
        update t_region_dispatching_detail a
        INNER JOIN (
        SELECT rdd.dispatchingOrder,
        CAST(CASE
        WHEN rdd.exchangeMaintain IS NOT NULL  AND rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'
        THEN rdd.exchangeMaintain
        WHEN rdd.exchangeMaintain IS NOT NULL  AND rdd.serviceType = '非上门维修'
        THEN rdd.exchangeMaintain
        WHEN rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修' AND rdd.returnWay = '自取'
        THEN rdd.shopReturnTime
        WHEN rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修' AND rdd.returnWay = '寄件'
        THEN rdd.customerDeliveryTime
        WHEN rdd.serviceType = '非上门维修'  AND rdd.returnWay = '自取'
        THEN rdd.shopReturnTime
        WHEN rdd.serviceType = '非上门维修'  AND rdd.returnWay = '寄件'
        THEN rdd.customerDeliveryTime
        ELSE rdd.finishTime
        END AS CHAR) AS TATFinishTime
        FROM t_region_dispatching_detail rdd
        <where>
            <if test="endTime != null and endTime != '' ">
                AND  rdd.dispatchingTime &lt;= #{endTime}
            </if>
            <if test="startTime != null and startTime != '' ">
                AND  rdd.dispatchingTime &gt;= #{startTime}
            </if>
        </where>
        ) b on a.dispatchingOrder = b.dispatchingOrder set a.TATFinishTime=b.TATFinishTime
        WHERE a.TATFinishTime IS NULL
        AND b.TATFinishTime IS NOT NULL
        AND b.TATFinishTime != ''
    </update>
    <update id="averageTime">
        update t_region_dispatching_detail a INNER JOIN (SELECT
            rdd.dispatchingOrder,
            TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.TATFinishTime) AS average
            FROM t_region_dispatching_detail rdd
            WHERE
            rdd.systemState NOT IN ('已作废','已关闭','申请作废')
            AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
            AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')

            AND rdd.average IS NULL
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.average = b.average
    </update>
    <update id="averageTime1">
        update t_region_dispatching_detail a INNER JOIN (SELECT
        rdd.dispatchingOrder,
        (CASE
        WHEN rdd.serviceType = '安装'
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.finishTime)
        WHEN rdd.serviceType = '维修'
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.finishTime)
        WHEN rdd.serviceType = '鉴定' AND (rdd.firstServiceType='安装' OR rdd.firstServiceType='维修')
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.finishTime)
        WHEN rdd.exchangeMaintain IS NOT NULL  AND rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.exchangeMaintain)
        WHEN rdd.exchangeMaintain IS NOT NULL  AND rdd.serviceType = '非上门维修'
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.exchangeMaintain)
        WHEN rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修' AND rdd.serviceWay = '送修'
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.shopReturnTime)
        WHEN rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修' AND rdd.serviceWay = '寄修'
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.customerDeliveryTime)
        WHEN rdd.serviceType = '非上门维修'  AND rdd.serviceWay = '送修'
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.shopReturnTime)
        WHEN rdd.serviceType = '非上门维修'  AND rdd.serviceWay = '寄修' AND rdd.returnWay = '自取'
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.shopReturnTime)
        WHEN rdd.serviceType = '非上门维修'  AND rdd.serviceWay = '寄修'
        THEN TIMESTAMPDIFF(SECOND,rdd.dispatchingTime,rdd.customerDeliveryTime)
        END) AS average
        FROM t_region_dispatching_detail rdd
        WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')

        AND rdd.average IS NULL
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        ) b on a.dispatchingOrder = b.dispatchingOrder set a.average = b.average
    </update>
    <update id="timelyEligible">
        update t_region_dispatching_detail a INNER JOIN (SELECT rdd.dispatchingOrder,

        (CASE
        WHEN SUBSTR(rdd.dispatchingTime, 12,8) &lt; rss.openingTime
        THEN IF (TIMESTAMPDIFF(MINUTE,
        CONCAT(LEFT (rdd.dispatchingTime, 11),rss.openingTime),
        rdd.appointmentOperationTime ) &lt;= 60,1,0)

        WHEN SUBSTR(rdd.dispatchingTime, 12,8) &gt; rss.closingTime
        THEN IF (TIMESTAMPDIFF(MINUTE,
        (DATE_ADD(CONCAT(LEFT (rdd.dispatchingTime, 11),rss.openingTime),INTERVAL 1 DAY)),
        rdd.appointmentOperationTime) &lt;= 60,1,0)

        ELSE IF (TIMESTAMPDIFF(MINUTE,
        rdd.dispatchingTime,
        rdd.appointmentOperationTime) &lt;= 30,1,0)
        END)AS timelyEligible
        FROM t_region_dispatching_detail rdd
        LEFT JOIN t_region_service_store rss ON rss.storeNumber = rdd.storeNumber
        AND rss.accountingCenterCode = rdd.accountingCenterCode
        WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND rdd.timelyEligible IS NULL
        AND rdd.appointmentOperationTime IS NOT NULL
        AND rdd.appointmentOperationTime != ''
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.timelyEligible = b.timelyEligible
    </update>
    <update id="firstPunctualityEligible" >
        update t_region_dispatching_detail a INNER JOIN (SELECT rdd.dispatchingOrder,
        IF(rdd.rescheduleFrequency &gt; 0,0,IF (
        CONCAT(LEFT (
        rdd.firstAppointmentTimeSection,
        16
        ),':00') &lt;= rdd.firstVisitTime
        AND rdd.firstVisitTime &lt;=
        IF(
        CONCAT(
        LEFT (
        rdd.firstAppointmentTimeSection,
        11
        ),
        RIGHT (
        rdd.firstAppointmentTimeSection,
        5
        )
        )&lt;LEFT (
        rdd.firstAppointmentTimeSection,
        16
        ),
        DATE_ADD(CONCAT(
        LEFT (
        rdd.firstAppointmentTimeSection,
        11
        ),
        RIGHT (
        rdd.firstAppointmentTimeSection,
        5
        ),':00'
        ),INTERVAL 1 DAY)
        ,CONCAT(
        LEFT (
        rdd.firstAppointmentTimeSection,
        11
        ),
        RIGHT (
        rdd.firstAppointmentTimeSection,
        5
        ),':00'
        ))
        ,
        1,
        0
        ))
            AS firstPunctualityEligible
        FROM
        t_region_dispatching_detail rdd
        WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND rdd.firstPunctualityEligible IS NULL
        AND rdd.firstVisitTime IS NOT NULL
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.firstPunctualityEligible = b.firstPunctualityEligible
    </update>
    <update id="punctualityEligible">
        update t_region_dispatching_detail a INNER JOIN (SELECT rdd.dispatchingOrder,
        IF (
        CONCAT(LEFT (
        rdd.appointmentTimeSection,
        16
        ),':00') &lt;= rdd.visitTime
        AND rdd.visitTime &lt;= IF(CONCAT(
        LEFT (
        rdd.appointmentTimeSection,
        11
        ),
        RIGHT (
        rdd.appointmentTimeSection,
        5
        )
        )&lt;LEFT (
        rdd.appointmentTimeSection,
        16
        ),DATE_ADD(CONCAT(
        LEFT (
        rdd.appointmentTimeSection,
        11
        ),
        RIGHT (
        rdd.appointmentTimeSection,
        5
        ),':00'
        ),INTERVAL 1 DAY),CONCAT(
        LEFT (
        rdd.appointmentTimeSection,
        11
        ),
        RIGHT (
        rdd.appointmentTimeSection,
        5
        ),':00'
        )),
        1,
        0
        ) AS punctualityEligible
        FROM
        t_region_dispatching_detail rdd
        WHERE
        rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND (rdd.serviceType IN ('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType IN ('安装','维修')))
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND rdd.punctualityEligible IS NULL
        AND rdd.visitTime IS NOT NULL
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.punctualityEligible = b.punctualityEligible
    </update>
    <update id="averageEligible" >
        update t_region_dispatching_detail a INNER JOIN (SELECT rdd.dispatchingOrder,
        (CASE

        WHEN rdd.average&gt;=3600 AND rdd.average&lt;=4*24*60*60
        AND (rdd.serviceType in('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType in('安装','维修')))
        THEN 1
        WHEN (rdd.serviceType = '非上门维修' OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType = '非上门维修'))
        AND rdd.average &lt;= 4*24*60*60
        THEN 1
        WHEN rdd.average &lt; 3600 AND (rdd.serviceType in('安装','维修') OR (rdd.serviceType = '鉴定' AND rdd.firstServiceType in('安装','维修')))
        THEN NULL
        ELSE 0 END)
        averageEligible
        FROM t_region_dispatching_detail rdd
        WHERE rdd.average IS NOT NULL
        AND rdd.systemState NOT IN ('已作废','已关闭','申请作废')
        AND rdd.serviceType IN ('安装','维修','鉴定','非上门维修')
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.averageEligible=b.averageEligible
    </update>
    <update id="solveEligible">
        update t_region_dispatching_detail a INNER JOIN (SELECT
        rdd.dispatchingOrder,
        IF
        (
        TIMESTAMPDIFF(
        DAY,
        LEFT ( ch.complaintStartTime, 10 ),
        LEFT ( IF ( ch.solutionLandingTime IS NULL OR ch.solutionLandingTime = '', ch.complaintEndTime, ch.solutionLandingTime ), 10 ))- IFNULL( ch.exceptionDay, 0 ) &lt;= 7,
        1,
        0
        ) AS solveEligible
        FROM
        t_region_dispatching_detail rdd
        LEFT JOIN t_complaint_handling ch ON ch.dispatchingOrder = rdd.dispatchingOrder
        WHERE
        ch.complaintType = '服务投诉'
        AND ch.systemState = '已结案'
          AND rdd.solveEligible IS NULL
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.solveEligible = b.solveEligible
    </update>
    <update id="repairEligible">
        update t_region_dispatching_detail a INNER JOIN (SELECT
        rdd.dispatchingOrder,
        CASE
        WHEN rdd.serviceType = '维修'
        AND rdd.finishTime IS NOT NULL
        AND (rdd.towUp &lt; '2' OR rdd.towUp IS NULL)
        THEN 1
        WHEN rdd.serviceType = '非上门维修'
        AND rdd.submissionTime IS NOT NULL
        AND rdd.towUp IS NULL
        THEN 1
        ELSE 0 END
        AS repairEligible
        FROM
        t_region_dispatching_detail rdd
        WHERE ((rdd.serviceType = '维修' AND rdd.finishTime IS NOT NULL) OR (rdd.serviceType = '非上门维修' AND rdd.submissionTime IS NOT NULL))
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND rdd.repairEligible IS NULL
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
        ) b on a.dispatchingOrder = b.dispatchingOrder set a.repairEligible = b.repairEligible
    </update>
    <update id="maintainEligible">
        update t_region_dispatching_detail a INNER JOIN (SELECT
        rdd.dispatchingOrder,

        IF(TIMESTAMPDIFF(SECOND,rdd.startTimeOfAssessment,rdd.finishTime ) &lt;=(2*24*60*60)
        ,1,0)AS maintainEligible
        FROM
        t_region_dispatching_detail rdd
        WHERE rdd.systemState NOT IN (
        '已作废',
        '已关闭',
        '申请作废'
        )
        AND rdd.serviceType = '维修'
        AND rdd.dispatchingSource NOT IN ('自接','营销中心','前置渠道')
        AND rdd.maintainEligible IS NULL
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.maintainEligible = b.maintainEligible
    </update>
    <update id="schemeEligible">
        update t_region_dispatching_detail a INNER JOIN (SELECT
        rdd.dispatchingOrder,
        IF(IF(ch.complaintStartTime = '' OR ch.solutionSubmissionTime = '',NULL,TIMESTAMPDIFF(DAY,LEFT(ch.complaintStartTime,10),LEFT(ch.solutionSubmissionTime,10) ))&lt;=1,1,0)AS schemeEligible
            FROM
        t_region_dispatching_detail rdd
        LEFT JOIN t_complaint_handling ch ON ch.dispatchingOrder = rdd.dispatchingOrder
        WHERE rdd.systemState NOT IN (
        '已作废',
        '已关闭',
        '申请作废'
        )
        AND rdd.serviceType IN (
        '安装',
        '维修',
        '鉴定',
        '非上门维修'
        )

        AND ch.complaintType = '服务投诉'
        AND ch.solutionSubmissionTime IS NOT NULL
        AND ch.solutionSubmissionTime != ''
        AND rdd.schemeEligible IS NULL
        <if test="endTime != null and endTime != '' ">
            AND  rdd.dispatchingTime &lt;= #{endTime}
        </if>
        <if test="startTime != null and startTime != '' ">
            AND  rdd.dispatchingTime &gt;= #{startTime}
        </if>
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.schemeEligible = b.schemeEligible
    </update>
    <update id="updateTwoUp2">
        update t_region_dispatching_detail a INNER JOIN (
            SELECT rsd.dispatchingOrder,1 AS towUp
            FROM t_region_second_door rsd
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.towUp = b.towUp
        WHERE (a.serviceType ='非上门维修' OR (a.serviceType = '鉴定' AND a.firstServiceType ='非上门维修'));
    </update>
    <update id="updateTwoUp1">
        update t_region_dispatching_detail a INNER JOIN (
            SELECT rpo.dispatchingOrder,
            SUM(IF(LEFT(rpo.pendingOrderTime,10)!=LEFT(rpo.finishOrderTime,10),1,0)) AS towUp
            FROM t_region_pending_order rpo
            GROUP BY rpo.dispatchingOrder
            ) b on a.dispatchingOrder = b.dispatchingOrder set a.towUp = b.towUp
        WHERE a.serviceType IN ('安装','维修') OR (a.serviceType = '鉴定' AND a.firstServiceType IN ('安装','维修'))
    </update>
    <update id="dispatchingRegionAll">
        UPDATE t_region_dispatching_detail a
            INNER JOIN (
            SELECT
            rdd.dispatchingOrder,
            rss.accountingArea,
            rss.accountingAreaCode
            FROM
            t_region_dispatching_detail rdd
            LEFT JOIN t_region_service_store rss ON rss.storeNumber = rdd.storeNumber
            AND rss.accountingCenterCode = rdd.accountingCenterCode
            WHERE
            rdd.accountingAreaCode IS NULL
            ) b ON a.dispatchingOrder = b.dispatchingOrder
            SET a.accountingArea = b.accountingArea,
                a.accountingAreaCode = b.accountingAreaCode
        WHERE
            a.accountingAreaCode IS NULL
    </update>
    <update id="complaintRegionAll">
        UPDATE t_complaint_handling a
            INNER JOIN (
            SELECT
            ch.complaintNumber,
            rss.accountingArea,
            rss.accountingAreaCode
            FROM
            t_complaint_handling ch
            LEFT JOIN t_region_service_store rss ON rss.storeNumber = ch.storeNumber
            AND rss.accountingCenterCode = ch.accountingCenterCode
            WHERE
            ch.accountingAreaCode IS NULL
            ) b ON a.complaintNumber = b.complaintNumber
            SET a.accountingArea = b.accountingArea,
                a.accountingAreaCode = b.accountingAreaCode
        WHERE
            a.accountingAreaCode IS NULL
    </update>
    <!--  分组查询每月或每天的解决率  -->
    <select id="averageSolveRate" resultType="java.util.Map">
        select
            cast(complaintStartTime as date) complaintStartTime,
        round(sum(ifnull(TIMESTAMPDIFF(DAY,cast(complaintStartTime as date),
        if(length(trim(solutionLandingTime)) > 0,cast(solutionLandingTime as date),cast(complaintEndTime as date))) - exceptionDay &lt;= 7,0))/count(complaintStartTime) * 100,1) sevenSolveRate
        from t_complaint_handling a
        left join t_region_service_store b
        on b.accountingCenterCode = a.accountingCenterCode and b.storeNumber = a.storeNumber
        <where>
            <include refid="downDateCondition"></include>
            <if test="dto.complaintType != null and dto.complaintType != ''">
                and complaintType = #{dto.complaintType}
            </if>
            <if test="dto.complaintClassify != null and dto.complaintClassify != ''">
                and complaintClassify = #{dto.complaintClassify}
            </if>
            <if test="dto.storeNumber != null and dto.storeNumber != ''">
                and a.storeNumber = #{dto.storeNumber}
            </if>
            <if test="dto.accountingCenterCode != null and dto.accountingCenterCode != ''">
                and a.accountingCenterCode = #{dto.accountingCenterCode}
            </if>
        </where>
            group by cast(complaintStartTime as date)
    </select>
    <!--  查询7天解决率和投诉件数  -->
    <select id="sevenDaySolveRate" resultType="java.util.Map">
        select concat(round(ifnull(sum(ifnull(TIMESTAMPDIFF(DAY,cast(complaintStartTime as date),
        if(length(trim(solutionLandingTime)) > 0,cast(solutionLandingTime as date),cast(complaintEndTime as date))) - exceptionDay &lt;= 7,0)) / count(1) * 100,0),1),'%') sevenSolveRate,
        ifnull(sum(ifnull(TIMESTAMPDIFF(DAY,cast(complaintStartTime as date),
        if(length(trim(solutionLandingTime)) > 0,cast(solutionLandingTime as date),cast(complaintEndTime as date))) - exceptionDay &lt;= 7,0)),0) complaintNumber
        from t_complaint_handling a
        <if test="dto.accountingAreaCode != null and dto.accountingAreaCode != ''">
            left join t_region_service_store b
            on b.accountingCenterCode = a.accountingCenterCode and b.storeNumber = a.storeNumber
        </if>
        <where>
            <include refid="dateCondition"></include>
            <if test="dto.complaintType != null and dto.complaintType != ''">
                and complaintType = #{dto.complaintType}
            </if>
            <if test="dto.complaintClassify != null and dto.complaintClassify != ''">
                and complaintClassify = #{dto.complaintClassify}
            </if>
            <if test="dto.storeNumber != null and dto.storeNumber != ''">
                and a.storeNumber = #{dto.storeNumber}
            </if>
            <if test="dto.accountingCenterCode != null and dto.accountingCenterCode != ''">
                and a.accountingCenterCode = #{dto.accountingCenterCode}
            </if>
            <if test="dto.accountingAreaCode != null and dto.accountingAreaCode != ''">
                and a.accountingAreaCode = #{dto.accountingAreaCode}
            </if>
        </where>
    </select>
    <!--  按月或按日查询N+1解决方案及时提交率  -->
    <select id="daysSubmissionRate" resultType="java.util.Map">
        select
            cast(complaintStartTime as date) complaintStartTime,
        round(ifnull(sum(ifnull(TIMESTAMPDIFF(DAY,cast(complaintStartTime as date),cast(solutionSubmissionTime as date)) &lt;= 1,0)) / count(1) * 100,0),1) submissionRate
        from t_complaint_handling a
        left join t_region_service_store b
        on b.accountingCenterCode = a.accountingCenterCode and b.storeNumber = a.storeNumber
        <where>
            <include refid="downDateCondition"></include>
            <if test="dto.complaintType != null and dto.complaintType != ''">
                and complaintType = #{dto.complaintType}
            </if>
            <if test="dto.storeNumber != null and dto.storeNumber != ''">
                and a.storeNumber = #{dto.storeNumber}
            </if>
            <if test="dto.accountingCenterCode != null and dto.accountingCenterCode != ''">
                and a.accountingCenterCode = #{dto.accountingCenterCode}
            </if>
            <if test="dto.complaintClassify != null and dto.complaintClassify != ''">
                and complaintClassify = #{dto.complaintClassify}
            </if>
        </where>
            group by cast(complaintStartTime as date)
    </select>
    <!--  查询N+1解决方案及时提交率  -->
    <select id="complaintSolveSubmissionRate" resultType="java.util.Map">
        select concat(round(ifnull(sum(ifnull(TIMESTAMPDIFF(DAY,cast(complaintStartTime as date),cast(solutionSubmissionTime as date)) &lt;= 1,0)) / count(1) * 100,0),1),'%') submissionRate,
        ifnull(sum(ifnull(TIMESTAMPDIFF(DAY,cast(complaintStartTime as date),cast(solutionSubmissionTime as date)) &lt;= 1,0)),0) submissionNumber
        from t_complaint_handling a
        left join t_region_service_store b
        on b.accountingCenterCode = a.accountingCenterCode and b.storeNumber = a.storeNumber
        <where>
            <include refid="downDateCondition"></include>
            <if test="dto.complaintType != null and dto.complaintType != ''">
                and complaintType = #{dto.complaintType}
            </if>
            <if test="dto.storeNumber != null and dto.storeNumber != ''">
                and a.storeNumber = #{dto.storeNumber}
            </if>
            <if test="dto.accountingCenterCode != null and dto.accountingCenterCode != ''">
                and a.accountingCenterCode = #{dto.accountingCenterCode}
            </if>
            <if test="dto.complaintClassify != null and dto.complaintClassify != ''">
                and complaintClassify = #{dto.complaintClassify}
            </if>
        </where>
    </select>
    <select id="selectComplaintType" resultType="java.lang.String">
        SELECT
            complaintType
        FROM
            t_complaint_handling a
        LEFT JOIN t_region_service_store b
        ON b.accountingCenterCode = a.accountingCenterCode and b.storeNumber = a.storeNumber
        <where>
            <include refid="downDateCondition"></include>
            <if test="dto.storeNumber != null and dto.storeNumber != ''">
                AND a.storeNumber = #{dto.storeNumber}
            </if>
            <if test="dto.accountingCenterCode != null and dto.accountingCenterCode != ''">
                AND a.accountingCenterCode = #{dto.accountingCenterCode}
            </if>
        </where>
        GROUP BY
            complaintType
    </select>
    <select id="errorList" resultType="java.lang.String">
        select distinct * from t_region_error
    </select>
    <sql id="dateCondition">
        <if test="dto.beginDate != null and dto.beginDate != ''">
            and complaintStartTime &gt;= concat_ws(' ',#{dto.beginDate},'00:00:00')
        </if>
        <if test="dto.endDate != null and dto.endDate != ''">
            and complaintStartTime &lt;= concat_ws(' ',#{dto.endDate},'23:59:59')
        </if>
        <if test="(dto.productTypeCode != null and dto.productTypeCode.size > 0) or (dto.productCategoryCode != null and dto.productCategoryCode.size > 0)">
            AND( 1=2
            <if test="dto.productTypeCode != null and dto.productTypeCode.size > 0">
                OR a.productTypeCode IN
                <foreach collection="dto.productTypeCode" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="dto.productCategoryCode != null and dto.productCategoryCode.size > 0">
                OR a.productCategoryCode IN
                <foreach collection="dto.productCategoryCode" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            )
        </if>
    </sql>

    <sql id="downDateCondition">
        <if test="dto.beginDate != null and dto.beginDate != ''">
            and cast(complaintStartTime as date) &gt;= #{dto.beginDate}
        </if>
        <if test="dto.endDate != null and dto.endDate != ''">
            and cast(complaintStartTime as date) &lt;= #{dto.endDate}
        </if>
        <if test="(dto.productTypeCode != null and dto.productTypeCode.size > 0) or (dto.productCategoryCode != null and dto.productCategoryCode.size > 0)">
            AND( 1=2
            <if test="dto.productTypeCode != null and dto.productTypeCode.size > 0">
                OR a.productTypeCode IN
                <foreach collection="dto.productTypeCode" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="dto.productCategoryCode != null and dto.productCategoryCode.size > 0">
                OR a.productCategoryCode IN
                <foreach collection="dto.productCategoryCode" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            )
        </if>
        <if test="dto.accountingAreaCode != null and dto.accountingAreaCode != ''">
            and a.accountingAreaCode = #{dto.accountingAreaCode}
        </if>
    </sql>
</mapper>